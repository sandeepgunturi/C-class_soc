//
// Generated by Bluespec Compiler (build 8d454e4)
//
// On Fri Oct  9 13:13:39 IST 2020
//
//
// Ports:
// Name                         I/O  size props
// rx_meta_from_stage2_deq_ena    O     1
// rx_mtval_from_stage2_deq_ena   O     1
// tx_common_to_stage4_enq_ena    O     1
// tx_common_to_stage4_enq_data   O    71
// tx_type_to_stage4_enq_ena      O     1
// tx_type_to_stage4_enq_data     O    83
// tx_inst_enq_ena                O     1
// tx_inst_enq_data_fst           O    64
// tx_inst_enq_data_snd           O    32
// rx_inst_deq_ena                O     1
// flush_from_exe_fst             O     1
// flush_from_exe_snd             O    64
// memory_request_get             O   143
// RDY_memory_request_get         O     1
// RDY_next_pc                    O     1 const
// mv_train_bpu                   O   142 reg
// RDY_mv_train_bpu               O     1 reg
// mv_mispredict_fst              O     1 reg
// RDY_mv_mispredict_fst          O     1 reg
// mv_mispredict_snd              O     8 reg
// RDY_mv_mispredict_snd          O     1 reg
// mv_count_floats                O     1
// RDY_mv_count_floats            O     1 const
// mv_count_muldiv                O     1
// RDY_mv_count_muldiv            O     1 const
// mv_count_jumps                 O     1
// RDY_mv_count_jumps             O     1 const
// mv_count_branches              O     1
// RDY_mv_count_branches          O     1 const
// mv_count_rawstalls             O     1
// RDY_mv_count_rawstalls         O     1 const
// mv_count_exestalls             O     1
// RDY_mv_count_exestalls         O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// rx_meta_from_stage2_notEmpty_b  I     1
// rx_meta_from_stage2_first_deq_rdy_b  I     1
// rx_meta_from_stage2_first_x    I   100
// rx_mtval_from_stage2_notEmpty_b  I     1 unused
// rx_mtval_from_stage2_first_deq_rdy_b  I     1
// rx_mtval_from_stage2_first_x   I    64
// ma_op1_i                       I    71
// ma_op2_i                       I    72
// ma_op3_i                       I    70
// tx_common_to_stage4_notFull_b  I     1 unused
// tx_common_to_stage4_enq_rdy_b  I     1
// tx_type_to_stage4_notFull_b    I     1 unused
// tx_type_to_stage4_enq_rdy_b    I     1
// tx_inst_notFull_b              I     1 unused
// tx_inst_enq_rdy_b              I     1
// rx_inst_notEmpty_b             I     1 unused
// rx_inst_first_deq_rdy_b        I     1
// rx_inst_first_x                I    32
// cache_is_available_avail       I     1
// csr_misa_c_m                   I     1
// storebuffer_empty_e            I     1 unused
// fwd_from_pipe3_fwd             I    72
// fwd_from_pipe4_first_fwd       I    72
// next_pc_npc                    I    64
// EN_ma_op1                      I     1
// EN_ma_op2                      I     1
// EN_ma_op3                      I     1
// EN_update_wEpoch               I     1
// EN_next_pc                     I     1
// EN_memory_request_get          I     1 unused
//
// Combinational paths from inputs to outputs:
//   (rx_meta_from_stage2_first_deq_rdy_b,
//    rx_meta_from_stage2_first_x,
//    rx_mtval_from_stage2_first_deq_rdy_b,
//    ma_op1_i,
//    ma_op2_i,
//    ma_op3_i,
//    tx_common_to_stage4_enq_rdy_b,
//    tx_type_to_stage4_enq_rdy_b,
//    tx_inst_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    cache_is_available_avail,
//    fwd_from_pipe3_fwd,
//    fwd_from_pipe4_first_fwd,
//    next_pc_npc,
//    EN_ma_op1,
//    EN_ma_op2,
//    EN_ma_op3,
//    EN_next_pc) -> rx_meta_from_stage2_deq_ena
//   (rx_meta_from_stage2_first_deq_rdy_b,
//    rx_meta_from_stage2_first_x,
//    rx_mtval_from_stage2_first_deq_rdy_b,
//    ma_op1_i,
//    ma_op2_i,
//    ma_op3_i,
//    tx_common_to_stage4_enq_rdy_b,
//    tx_type_to_stage4_enq_rdy_b,
//    tx_inst_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    cache_is_available_avail,
//    fwd_from_pipe3_fwd,
//    fwd_from_pipe4_first_fwd,
//    next_pc_npc,
//    EN_ma_op1,
//    EN_ma_op2,
//    EN_ma_op3,
//    EN_next_pc) -> rx_mtval_from_stage2_deq_ena
//   (rx_meta_from_stage2_first_deq_rdy_b,
//    rx_meta_from_stage2_first_x,
//    rx_mtval_from_stage2_first_deq_rdy_b,
//    ma_op1_i,
//    ma_op2_i,
//    ma_op3_i,
//    tx_common_to_stage4_enq_rdy_b,
//    tx_type_to_stage4_enq_rdy_b,
//    tx_inst_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    cache_is_available_avail,
//    fwd_from_pipe3_fwd,
//    fwd_from_pipe4_first_fwd,
//    next_pc_npc,
//    EN_ma_op1,
//    EN_ma_op2,
//    EN_ma_op3,
//    EN_next_pc) -> tx_common_to_stage4_enq_ena
//   (rx_meta_from_stage2_first_deq_rdy_b,
//    rx_meta_from_stage2_first_x,
//    rx_mtval_from_stage2_first_deq_rdy_b,
//    ma_op1_i,
//    ma_op2_i,
//    ma_op3_i,
//    tx_common_to_stage4_enq_rdy_b,
//    tx_type_to_stage4_enq_rdy_b,
//    tx_inst_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    cache_is_available_avail,
//    fwd_from_pipe3_fwd,
//    fwd_from_pipe4_first_fwd,
//    next_pc_npc,
//    EN_ma_op1,
//    EN_ma_op2,
//    EN_ma_op3,
//    EN_next_pc) -> tx_common_to_stage4_enq_data
//   (rx_meta_from_stage2_first_deq_rdy_b,
//    rx_meta_from_stage2_first_x,
//    rx_mtval_from_stage2_first_deq_rdy_b,
//    ma_op1_i,
//    ma_op2_i,
//    ma_op3_i,
//    tx_common_to_stage4_enq_rdy_b,
//    tx_type_to_stage4_enq_rdy_b,
//    tx_inst_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    cache_is_available_avail,
//    csr_misa_c_m,
//    fwd_from_pipe3_fwd,
//    fwd_from_pipe4_first_fwd,
//    next_pc_npc,
//    EN_ma_op1,
//    EN_ma_op2,
//    EN_ma_op3,
//    EN_next_pc) -> tx_type_to_stage4_enq_ena
//   (rx_meta_from_stage2_first_deq_rdy_b,
//    rx_meta_from_stage2_first_x,
//    rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_mtval_from_stage2_first_x,
//    ma_op1_i,
//    ma_op2_i,
//    ma_op3_i,
//    tx_common_to_stage4_enq_rdy_b,
//    tx_type_to_stage4_enq_rdy_b,
//    tx_inst_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    cache_is_available_avail,
//    csr_misa_c_m,
//    fwd_from_pipe3_fwd,
//    fwd_from_pipe4_first_fwd,
//    next_pc_npc,
//    EN_ma_op1,
//    EN_ma_op2,
//    EN_ma_op3,
//    EN_next_pc) -> tx_type_to_stage4_enq_data
//   (rx_meta_from_stage2_first_deq_rdy_b,
//    rx_meta_from_stage2_first_x,
//    rx_mtval_from_stage2_first_deq_rdy_b,
//    ma_op1_i,
//    ma_op2_i,
//    ma_op3_i,
//    tx_common_to_stage4_enq_rdy_b,
//    tx_type_to_stage4_enq_rdy_b,
//    tx_inst_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    cache_is_available_avail,
//    fwd_from_pipe3_fwd,
//    fwd_from_pipe4_first_fwd,
//    next_pc_npc,
//    EN_ma_op1,
//    EN_ma_op2,
//    EN_ma_op3,
//    EN_next_pc) -> tx_inst_enq_ena
//   (rx_meta_from_stage2_first_deq_rdy_b,
//    rx_meta_from_stage2_first_x,
//    rx_mtval_from_stage2_first_deq_rdy_b,
//    ma_op1_i,
//    ma_op2_i,
//    ma_op3_i,
//    tx_common_to_stage4_enq_rdy_b,
//    tx_type_to_stage4_enq_rdy_b,
//    tx_inst_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    rx_inst_first_x,
//    cache_is_available_avail,
//    fwd_from_pipe3_fwd,
//    fwd_from_pipe4_first_fwd,
//    next_pc_npc,
//    EN_ma_op1,
//    EN_ma_op2,
//    EN_ma_op3,
//    EN_next_pc) -> tx_inst_enq_data_fst
//   (rx_meta_from_stage2_first_deq_rdy_b,
//    rx_meta_from_stage2_first_x,
//    rx_mtval_from_stage2_first_deq_rdy_b,
//    ma_op1_i,
//    ma_op2_i,
//    ma_op3_i,
//    tx_common_to_stage4_enq_rdy_b,
//    tx_type_to_stage4_enq_rdy_b,
//    tx_inst_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    rx_inst_first_x,
//    cache_is_available_avail,
//    fwd_from_pipe3_fwd,
//    fwd_from_pipe4_first_fwd,
//    next_pc_npc,
//    EN_ma_op1,
//    EN_ma_op2,
//    EN_ma_op3,
//    EN_next_pc) -> tx_inst_enq_data_snd
//   (rx_meta_from_stage2_first_deq_rdy_b,
//    rx_meta_from_stage2_first_x,
//    rx_mtval_from_stage2_first_deq_rdy_b,
//    ma_op1_i,
//    ma_op2_i,
//    ma_op3_i,
//    tx_common_to_stage4_enq_rdy_b,
//    tx_type_to_stage4_enq_rdy_b,
//    tx_inst_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    cache_is_available_avail,
//    fwd_from_pipe3_fwd,
//    fwd_from_pipe4_first_fwd,
//    next_pc_npc,
//    EN_ma_op1,
//    EN_ma_op2,
//    EN_ma_op3,
//    EN_next_pc) -> rx_inst_deq_ena
//   (rx_meta_from_stage2_first_deq_rdy_b,
//    rx_meta_from_stage2_first_x,
//    rx_mtval_from_stage2_first_deq_rdy_b,
//    ma_op1_i,
//    ma_op2_i,
//    ma_op3_i,
//    tx_common_to_stage4_enq_rdy_b,
//    tx_type_to_stage4_enq_rdy_b,
//    tx_inst_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    cache_is_available_avail,
//    csr_misa_c_m,
//    fwd_from_pipe3_fwd,
//    fwd_from_pipe4_first_fwd,
//    next_pc_npc,
//    EN_ma_op1,
//    EN_ma_op2,
//    EN_ma_op3,
//    EN_next_pc) -> flush_from_exe_fst
//   (rx_meta_from_stage2_first_deq_rdy_b,
//    rx_meta_from_stage2_first_x,
//    rx_mtval_from_stage2_first_deq_rdy_b,
//    ma_op1_i,
//    ma_op2_i,
//    ma_op3_i,
//    tx_common_to_stage4_enq_rdy_b,
//    tx_type_to_stage4_enq_rdy_b,
//    tx_inst_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    cache_is_available_avail,
//    csr_misa_c_m,
//    fwd_from_pipe3_fwd,
//    fwd_from_pipe4_first_fwd,
//    next_pc_npc,
//    EN_ma_op1,
//    EN_ma_op2,
//    EN_ma_op3,
//    EN_next_pc) -> flush_from_exe_snd
//   (rx_meta_from_stage2_first_deq_rdy_b,
//    rx_meta_from_stage2_first_x,
//    rx_mtval_from_stage2_first_deq_rdy_b,
//    ma_op1_i,
//    ma_op2_i,
//    ma_op3_i,
//    tx_common_to_stage4_enq_rdy_b,
//    tx_type_to_stage4_enq_rdy_b,
//    tx_inst_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    cache_is_available_avail,
//    fwd_from_pipe3_fwd,
//    fwd_from_pipe4_first_fwd,
//    EN_ma_op1,
//    EN_ma_op2,
//    EN_ma_op3) -> RDY_memory_request_get
//   (rx_meta_from_stage2_first_deq_rdy_b,
//    rx_meta_from_stage2_first_x,
//    rx_mtval_from_stage2_first_deq_rdy_b,
//    ma_op1_i,
//    ma_op2_i,
//    ma_op3_i,
//    tx_common_to_stage4_enq_rdy_b,
//    tx_type_to_stage4_enq_rdy_b,
//    tx_inst_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    cache_is_available_avail,
//    csr_misa_c_m,
//    fwd_from_pipe3_fwd,
//    fwd_from_pipe4_first_fwd,
//    next_pc_npc,
//    EN_ma_op1,
//    EN_ma_op2,
//    EN_ma_op3,
//    EN_next_pc) -> mv_count_floats
//   (rx_meta_from_stage2_first_deq_rdy_b,
//    rx_meta_from_stage2_first_x,
//    rx_mtval_from_stage2_first_deq_rdy_b,
//    ma_op1_i,
//    ma_op2_i,
//    ma_op3_i,
//    tx_common_to_stage4_enq_rdy_b,
//    tx_type_to_stage4_enq_rdy_b,
//    tx_inst_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    cache_is_available_avail,
//    csr_misa_c_m,
//    fwd_from_pipe3_fwd,
//    fwd_from_pipe4_first_fwd,
//    next_pc_npc,
//    EN_ma_op1,
//    EN_ma_op2,
//    EN_ma_op3,
//    EN_next_pc) -> mv_count_muldiv
//   (rx_meta_from_stage2_first_deq_rdy_b,
//    rx_meta_from_stage2_first_x,
//    rx_mtval_from_stage2_first_deq_rdy_b,
//    ma_op1_i,
//    ma_op2_i,
//    ma_op3_i,
//    tx_common_to_stage4_enq_rdy_b,
//    tx_type_to_stage4_enq_rdy_b,
//    tx_inst_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    cache_is_available_avail,
//    csr_misa_c_m,
//    fwd_from_pipe3_fwd,
//    fwd_from_pipe4_first_fwd,
//    next_pc_npc,
//    EN_ma_op1,
//    EN_ma_op2,
//    EN_ma_op3,
//    EN_next_pc) -> mv_count_jumps
//   (rx_meta_from_stage2_first_deq_rdy_b,
//    rx_meta_from_stage2_first_x,
//    rx_mtval_from_stage2_first_deq_rdy_b,
//    ma_op1_i,
//    ma_op2_i,
//    ma_op3_i,
//    tx_common_to_stage4_enq_rdy_b,
//    tx_type_to_stage4_enq_rdy_b,
//    tx_inst_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    cache_is_available_avail,
//    csr_misa_c_m,
//    fwd_from_pipe3_fwd,
//    fwd_from_pipe4_first_fwd,
//    next_pc_npc,
//    EN_ma_op1,
//    EN_ma_op2,
//    EN_ma_op3,
//    EN_next_pc) -> mv_count_branches
//   (rx_meta_from_stage2_first_deq_rdy_b,
//    rx_meta_from_stage2_first_x,
//    rx_mtval_from_stage2_first_deq_rdy_b,
//    ma_op1_i,
//    ma_op2_i,
//    ma_op3_i,
//    tx_common_to_stage4_enq_rdy_b,
//    tx_type_to_stage4_enq_rdy_b,
//    tx_inst_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    cache_is_available_avail,
//    fwd_from_pipe3_fwd,
//    fwd_from_pipe4_first_fwd,
//    EN_ma_op1,
//    EN_ma_op2,
//    EN_ma_op3) -> mv_count_rawstalls
//   (rx_meta_from_stage2_first_deq_rdy_b,
//    rx_meta_from_stage2_first_x,
//    rx_mtval_from_stage2_first_deq_rdy_b,
//    ma_op1_i,
//    ma_op2_i,
//    ma_op3_i,
//    tx_common_to_stage4_enq_rdy_b,
//    tx_type_to_stage4_enq_rdy_b,
//    tx_inst_enq_rdy_b,
//    rx_inst_first_deq_rdy_b,
//    cache_is_available_avail,
//    fwd_from_pipe3_fwd,
//    fwd_from_pipe4_first_fwd,
//    EN_ma_op1,
//    EN_ma_op2,
//    EN_ma_op3) -> memory_request_get
//   tx_type_to_stage4_enq_rdy_b -> mv_count_exestalls
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkstage3(CLK,
		RST_N,

		rx_meta_from_stage2_notEmpty_b,

		rx_meta_from_stage2_first_deq_rdy_b,

		rx_meta_from_stage2_first_x,

		rx_meta_from_stage2_deq_ena,

		rx_mtval_from_stage2_notEmpty_b,

		rx_mtval_from_stage2_first_deq_rdy_b,

		rx_mtval_from_stage2_first_x,

		rx_mtval_from_stage2_deq_ena,

		ma_op1_i,
		EN_ma_op1,

		ma_op2_i,
		EN_ma_op2,

		ma_op3_i,
		EN_ma_op3,

		tx_common_to_stage4_notFull_b,

		tx_common_to_stage4_enq_rdy_b,

		tx_common_to_stage4_enq_ena,

		tx_common_to_stage4_enq_data,

		tx_type_to_stage4_notFull_b,

		tx_type_to_stage4_enq_rdy_b,

		tx_type_to_stage4_enq_ena,

		tx_type_to_stage4_enq_data,

		tx_inst_notFull_b,

		tx_inst_enq_rdy_b,

		tx_inst_enq_ena,

		tx_inst_enq_data_fst,

		tx_inst_enq_data_snd,

		rx_inst_notEmpty_b,

		rx_inst_first_deq_rdy_b,

		rx_inst_first_x,

		rx_inst_deq_ena,

		EN_update_wEpoch,

		flush_from_exe_fst,

		flush_from_exe_snd,

		EN_memory_request_get,
		memory_request_get,
		RDY_memory_request_get,

		cache_is_available_avail,

		csr_misa_c_m,

		storebuffer_empty_e,

		fwd_from_pipe3_fwd,

		fwd_from_pipe4_first_fwd,

		next_pc_npc,
		EN_next_pc,
		RDY_next_pc,

		mv_train_bpu,
		RDY_mv_train_bpu,

		mv_mispredict_fst,
		RDY_mv_mispredict_fst,

		mv_mispredict_snd,
		RDY_mv_mispredict_snd,

		mv_count_floats,
		RDY_mv_count_floats,

		mv_count_muldiv,
		RDY_mv_count_muldiv,

		mv_count_jumps,
		RDY_mv_count_jumps,

		mv_count_branches,
		RDY_mv_count_branches,

		mv_count_rawstalls,
		RDY_mv_count_rawstalls,

		mv_count_exestalls,
		RDY_mv_count_exestalls);
  parameter [63 : 0] hartid = 64'b0;
  input  CLK;
  input  RST_N;

  // action method rx_meta_from_stage2_notEmpty
  input  rx_meta_from_stage2_notEmpty_b;

  // action method rx_meta_from_stage2_first_deq_rdy
  input  rx_meta_from_stage2_first_deq_rdy_b;

  // action method rx_meta_from_stage2_first
  input  [99 : 0] rx_meta_from_stage2_first_x;

  // value method rx_meta_from_stage2_deq_ena
  output rx_meta_from_stage2_deq_ena;

  // action method rx_mtval_from_stage2_notEmpty
  input  rx_mtval_from_stage2_notEmpty_b;

  // action method rx_mtval_from_stage2_first_deq_rdy
  input  rx_mtval_from_stage2_first_deq_rdy_b;

  // action method rx_mtval_from_stage2_first
  input  [63 : 0] rx_mtval_from_stage2_first_x;

  // value method rx_mtval_from_stage2_deq_ena
  output rx_mtval_from_stage2_deq_ena;

  // action method ma_op1
  input  [70 : 0] ma_op1_i;
  input  EN_ma_op1;

  // action method ma_op2
  input  [71 : 0] ma_op2_i;
  input  EN_ma_op2;

  // action method ma_op3
  input  [69 : 0] ma_op3_i;
  input  EN_ma_op3;

  // action method tx_common_to_stage4_notFull
  input  tx_common_to_stage4_notFull_b;

  // action method tx_common_to_stage4_enq_rdy
  input  tx_common_to_stage4_enq_rdy_b;

  // value method tx_common_to_stage4_enq_ena
  output tx_common_to_stage4_enq_ena;

  // value method tx_common_to_stage4_enq_data
  output [70 : 0] tx_common_to_stage4_enq_data;

  // action method tx_type_to_stage4_notFull
  input  tx_type_to_stage4_notFull_b;

  // action method tx_type_to_stage4_enq_rdy
  input  tx_type_to_stage4_enq_rdy_b;

  // value method tx_type_to_stage4_enq_ena
  output tx_type_to_stage4_enq_ena;

  // value method tx_type_to_stage4_enq_data
  output [82 : 0] tx_type_to_stage4_enq_data;

  // action method tx_inst_notFull
  input  tx_inst_notFull_b;

  // action method tx_inst_enq_rdy
  input  tx_inst_enq_rdy_b;

  // value method tx_inst_enq_ena
  output tx_inst_enq_ena;

  // value method tx_inst_enq_data_fst
  output [63 : 0] tx_inst_enq_data_fst;

  // value method tx_inst_enq_data_snd
  output [31 : 0] tx_inst_enq_data_snd;

  // action method rx_inst_notEmpty
  input  rx_inst_notEmpty_b;

  // action method rx_inst_first_deq_rdy
  input  rx_inst_first_deq_rdy_b;

  // action method rx_inst_first
  input  [31 : 0] rx_inst_first_x;

  // value method rx_inst_deq_ena
  output rx_inst_deq_ena;

  // action method update_wEpoch
  input  EN_update_wEpoch;

  // value method flush_from_exe_fst
  output flush_from_exe_fst;

  // value method flush_from_exe_snd
  output [63 : 0] flush_from_exe_snd;

  // actionvalue method memory_request_get
  input  EN_memory_request_get;
  output [142 : 0] memory_request_get;
  output RDY_memory_request_get;

  // action method cache_is_available
  input  cache_is_available_avail;

  // action method csr_misa_c
  input  csr_misa_c_m;

  // action method storebuffer_empty
  input  storebuffer_empty_e;

  // action method fwd_from_pipe3
  input  [71 : 0] fwd_from_pipe3_fwd;

  // action method fwd_from_pipe4_first
  input  [71 : 0] fwd_from_pipe4_first_fwd;

  // action method next_pc
  input  [63 : 0] next_pc_npc;
  input  EN_next_pc;
  output RDY_next_pc;

  // value method mv_train_bpu
  output [141 : 0] mv_train_bpu;
  output RDY_mv_train_bpu;

  // value method mv_mispredict_fst
  output mv_mispredict_fst;
  output RDY_mv_mispredict_fst;

  // value method mv_mispredict_snd
  output [7 : 0] mv_mispredict_snd;
  output RDY_mv_mispredict_snd;

  // value method mv_count_floats
  output mv_count_floats;
  output RDY_mv_count_floats;

  // value method mv_count_muldiv
  output mv_count_muldiv;
  output RDY_mv_count_muldiv;

  // value method mv_count_jumps
  output mv_count_jumps;
  output RDY_mv_count_jumps;

  // value method mv_count_branches
  output mv_count_branches;
  output RDY_mv_count_branches;

  // value method mv_count_rawstalls
  output mv_count_rawstalls;
  output RDY_mv_count_rawstalls;

  // value method mv_count_exestalls
  output mv_count_exestalls;
  output RDY_mv_count_exestalls;

  // signals for module outputs
  wire [142 : 0] memory_request_get;
  wire [141 : 0] mv_train_bpu;
  wire [82 : 0] tx_type_to_stage4_enq_data;
  wire [70 : 0] tx_common_to_stage4_enq_data;
  wire [63 : 0] flush_from_exe_snd, tx_inst_enq_data_fst;
  wire [31 : 0] tx_inst_enq_data_snd;
  wire [7 : 0] mv_mispredict_snd;
  wire RDY_memory_request_get,
       RDY_mv_count_branches,
       RDY_mv_count_exestalls,
       RDY_mv_count_floats,
       RDY_mv_count_jumps,
       RDY_mv_count_muldiv,
       RDY_mv_count_rawstalls,
       RDY_mv_mispredict_fst,
       RDY_mv_mispredict_snd,
       RDY_mv_train_bpu,
       RDY_next_pc,
       flush_from_exe_fst,
       mv_count_branches,
       mv_count_exestalls,
       mv_count_floats,
       mv_count_jumps,
       mv_count_muldiv,
       mv_count_rawstalls,
       mv_mispredict_fst,
       rx_inst_deq_ena,
       rx_meta_from_stage2_deq_ena,
       rx_mtval_from_stage2_deq_ena,
       tx_common_to_stage4_enq_ena,
       tx_inst_enq_ena,
       tx_type_to_stage4_enq_ena;

  // inlined wires
  wire [142 : 0] wr_training_data_1_wget;
  wire [99 : 0] rx_meta_w_data_wget;
  wire [95 : 0] txinst_w_data_wget;
  wire [82 : 0] tx_type_w_data_wget;
  wire [71 : 0] wr_op2_wget;
  wire [70 : 0] wr_op1_wget;
  wire [64 : 0] wr_next_pc_wget;
  wire [9 : 0] wr_mispredict_ghr_1_wget;
  wire rx_meta_w_ena_whas,
       tx_type_w_ena_whas,
       wr_count_branches_whas,
       wr_count_exestalls_whas,
       wr_count_floats_whas,
       wr_count_jumps_whas,
       wr_count_muldiv_whas,
       wr_count_rawstalls_whas,
       wr_mispredict_ghr_1_whas,
       wr_training_data_1_whas;

  // register rg_eEpoch
  reg rg_eEpoch;
  wire rg_eEpoch_D_IN, rg_eEpoch_EN;

  // register rg_loadreserved_addr
  reg [64 : 0] rg_loadreserved_addr;
  wire [64 : 0] rg_loadreserved_addr_D_IN;
  wire rg_loadreserved_addr_EN;

  // register rg_stall
  reg rg_stall;
  wire rg_stall_D_IN, rg_stall_EN;

  // register rg_wEpoch
  reg rg_wEpoch;
  wire rg_wEpoch_D_IN, rg_wEpoch_EN;

  // register wr_mispredict_ghr
  reg [9 : 0] wr_mispredict_ghr;
  wire [9 : 0] wr_mispredict_ghr_D_IN;
  wire wr_mispredict_ghr_EN;

  // register wr_training_data
  reg [142 : 0] wr_training_data;
  wire [142 : 0] wr_training_data_D_IN;
  wire wr_training_data_EN;

  // ports of submodule fwding
  wire [71 : 0] fwding_fwd_from_pipe3_fwd, fwding_fwd_from_pipe4_first_fwd;
  wire [64 : 0] fwding_read_rs1, fwding_read_rs2, fwding_read_rs3;
  wire [63 : 0] fwding_read_rs1_val, fwding_read_rs2_val, fwding_read_rs3_val;
  wire [4 : 0] fwding_read_rs1_addr,
	       fwding_read_rs2_addr,
	       fwding_read_rs3_addr;
  wire fwding_EN_read_rs1,
       fwding_EN_read_rs2,
       fwding_EN_read_rs3,
       fwding_RDY_read_rs1,
       fwding_RDY_read_rs2,
       fwding_RDY_read_rs3,
       fwding_read_rs1_rftype,
       fwding_read_rs2_rftype,
       fwding_read_rs3_rftype;

  // ports of submodule multicycle_alu
  wire [69 : 0] multicycle_alu_mv_delayed_output;
  wire [63 : 0] multicycle_alu_ma_inputs_op1,
		multicycle_alu_ma_inputs_op2,
		multicycle_alu_ma_inputs_op3;
  wire [3 : 0] multicycle_alu_ma_inputs_fn,
	       multicycle_alu_ma_inputs_inst_type;
  wire [2 : 0] multicycle_alu_ma_inputs_funct3;
  wire multicycle_alu_EN_ma_inputs,
       multicycle_alu_RDY_ma_inputs,
       multicycle_alu_RDY_mv_delayed_output,
       multicycle_alu_ma_inputs_word32;

  // rule scheduling signals
  wire CAN_FIRE_RL_delayed_output,
       CAN_FIRE_RL_rl_capture_latest_ops,
       CAN_FIRE_RL_rl_capture_memory_stalls,
       CAN_FIRE_RL_wr_mispredict_ghr__dreg_update,
       CAN_FIRE_RL_wr_training_data__dreg_update,
       CAN_FIRE_cache_is_available,
       CAN_FIRE_csr_misa_c,
       CAN_FIRE_fwd_from_pipe3,
       CAN_FIRE_fwd_from_pipe4_first,
       CAN_FIRE_ma_op1,
       CAN_FIRE_ma_op2,
       CAN_FIRE_ma_op3,
       CAN_FIRE_memory_request_get,
       CAN_FIRE_next_pc,
       CAN_FIRE_rx_inst_first,
       CAN_FIRE_rx_inst_first_deq_rdy,
       CAN_FIRE_rx_inst_notEmpty,
       CAN_FIRE_rx_meta_from_stage2_first,
       CAN_FIRE_rx_meta_from_stage2_first_deq_rdy,
       CAN_FIRE_rx_meta_from_stage2_notEmpty,
       CAN_FIRE_rx_mtval_from_stage2_first,
       CAN_FIRE_rx_mtval_from_stage2_first_deq_rdy,
       CAN_FIRE_rx_mtval_from_stage2_notEmpty,
       CAN_FIRE_storebuffer_empty,
       CAN_FIRE_tx_common_to_stage4_enq_rdy,
       CAN_FIRE_tx_common_to_stage4_notFull,
       CAN_FIRE_tx_inst_enq_rdy,
       CAN_FIRE_tx_inst_notFull,
       CAN_FIRE_tx_type_to_stage4_enq_rdy,
       CAN_FIRE_tx_type_to_stage4_notFull,
       CAN_FIRE_update_wEpoch,
       WILL_FIRE_RL_delayed_output,
       WILL_FIRE_RL_rl_capture_latest_ops,
       WILL_FIRE_RL_rl_capture_memory_stalls,
       WILL_FIRE_RL_wr_mispredict_ghr__dreg_update,
       WILL_FIRE_RL_wr_training_data__dreg_update,
       WILL_FIRE_cache_is_available,
       WILL_FIRE_csr_misa_c,
       WILL_FIRE_fwd_from_pipe3,
       WILL_FIRE_fwd_from_pipe4_first,
       WILL_FIRE_ma_op1,
       WILL_FIRE_ma_op2,
       WILL_FIRE_ma_op3,
       WILL_FIRE_memory_request_get,
       WILL_FIRE_next_pc,
       WILL_FIRE_rx_inst_first,
       WILL_FIRE_rx_inst_first_deq_rdy,
       WILL_FIRE_rx_inst_notEmpty,
       WILL_FIRE_rx_meta_from_stage2_first,
       WILL_FIRE_rx_meta_from_stage2_first_deq_rdy,
       WILL_FIRE_rx_meta_from_stage2_notEmpty,
       WILL_FIRE_rx_mtval_from_stage2_first,
       WILL_FIRE_rx_mtval_from_stage2_first_deq_rdy,
       WILL_FIRE_rx_mtval_from_stage2_notEmpty,
       WILL_FIRE_storebuffer_empty,
       WILL_FIRE_tx_common_to_stage4_enq_rdy,
       WILL_FIRE_tx_common_to_stage4_notFull,
       WILL_FIRE_tx_inst_enq_rdy,
       WILL_FIRE_tx_inst_notFull,
       WILL_FIRE_tx_type_to_stage4_enq_rdy,
       WILL_FIRE_tx_type_to_stage4_notFull,
       WILL_FIRE_update_wEpoch;

  // inputs to muxes for submodule ports
  reg [82 : 0] MUX_tx_type_w_data_wset_1__VAL_2;
  wire [82 : 0] MUX_tx_type_w_data_wset_1__VAL_1;
  wire MUX_rg_stall_write_1__SEL_1,
       MUX_rg_stall_write_1__SEL_2,
       MUX_rg_stall_write_1__VAL_2;

  // declarations used by system tasks
  // synopsys translate_off
  reg TASK_testplusargs___d28;
  reg TASK_testplusargs___d29;
  reg TASK_testplusargs___d30;
  reg [63 : 0] v__h3718;
  reg TASK_testplusargs___d64;
  reg TASK_testplusargs___d65;
  reg TASK_testplusargs___d66;
  reg [63 : 0] v__h3841;
  reg TASK_testplusargs___d74;
  reg TASK_testplusargs___d75;
  reg TASK_testplusargs___d76;
  reg [63 : 0] v__h4051;
  reg TASK_testplusargs___d294;
  reg TASK_testplusargs___d295;
  reg TASK_testplusargs___d296;
  reg [63 : 0] v__h5637;
  reg TASK_testplusargs___d315;
  reg TASK_testplusargs___d316;
  reg TASK_testplusargs___d317;
  reg [63 : 0] v__h5903;
  reg TASK_testplusargs___d334;
  reg TASK_testplusargs___d335;
  reg TASK_testplusargs___d336;
  reg [63 : 0] v__h6246;
  reg TASK_testplusargs___d342;
  reg TASK_testplusargs___d343;
  reg TASK_testplusargs___d344;
  reg [63 : 0] v__h6474;
  reg TASK_testplusargs___d355;
  reg TASK_testplusargs___d356;
  reg TASK_testplusargs___d357;
  reg [63 : 0] v__h6643;
  reg TASK_testplusargs___d363;
  reg TASK_testplusargs___d364;
  reg TASK_testplusargs___d365;
  reg [63 : 0] v__h6799;
  reg TASK_testplusargs___d372;
  reg TASK_testplusargs___d373;
  reg TASK_testplusargs___d374;
  reg [63 : 0] v__h6964;
  reg TASK_testplusargs___d380;
  reg TASK_testplusargs___d381;
  reg TASK_testplusargs___d382;
  reg [63 : 0] v__h7119;
  reg TASK_testplusargs___d459;
  reg TASK_testplusargs___d460;
  reg TASK_testplusargs___d461;
  reg [63 : 0] v__h7961;
  reg TASK_testplusargs___d561;
  reg TASK_testplusargs___d562;
  reg TASK_testplusargs___d563;
  reg [63 : 0] v__h8711;
  reg TASK_testplusargs___d575;
  reg TASK_testplusargs___d576;
  reg TASK_testplusargs___d577;
  reg [63 : 0] v__h8880;
  reg TASK_testplusargs___d695;
  reg TASK_testplusargs___d696;
  reg TASK_testplusargs___d697;
  reg [63 : 0] v__h6098;
  reg TASK_testplusargs___d711;
  reg TASK_testplusargs___d712;
  reg TASK_testplusargs___d713;
  reg [63 : 0] v__h9818;
  reg TASK_testplusargs___d719;
  reg TASK_testplusargs___d720;
  reg TASK_testplusargs___d721;
  reg [63 : 0] v__h9664;
  reg NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d339;
  reg NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d347;
  reg NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d360;
  reg NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d368;
  reg NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d377;
  reg NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d385;
  reg TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d398;
  reg TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d402;
  reg TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d411;
  reg TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d415;
  reg TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d419;
  reg TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d423;
  reg fn_alu_96_BIT_1_10_AND_NOT_fn_alu_96_BIT_130_9_ETC___d464;
  reg TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d469;
  reg fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d471;
  reg TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d474;
  reg fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d476;
  reg TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d479;
  reg TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d483;
  reg TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d487;
  reg TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d492;
  reg fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d494;
  reg TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d496;
  reg TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d500;
  reg fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d502;
  reg TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d505;
  reg fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d507;
  reg TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d522;
  reg fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d524;
  reg IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d566;
  reg NOT_IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta__ETC___d580;
  reg TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d585;
  reg TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d589;
  reg TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d593;
  reg TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d601;
  reg TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d612;
  reg TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d625;
  reg TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d631;
  reg TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d636;
  reg TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d641;
  reg TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d646;
  reg TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d651;
  reg TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d664;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d95;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d97;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d99;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d101;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d103;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d113;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d117;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d119;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d121;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d123;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d125;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d127;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d129;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d131;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d133;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d151;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d158;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d161;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d165;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d167;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d171;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d173;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d179;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d181;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d185;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d187;
  reg NOT_fwding_read_rs1_04_BIT_64_05_84_OR_NOT_fwd_ETC___d299;
  reg fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d320;
  reg rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d604;
  reg rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d615;
  reg rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d628;
  reg NOT_rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14__ETC___d700;
  reg multicycle_alu_mv_delayed_output__05_BIT_5_06__ETC___d716;
  reg NOT_multicycle_alu_mv_delayed_output__05_BIT_5_ETC___d724;
  // synopsys translate_on

  // remaining internal signals
  reg [2 : 0] CASE_IF_fwding_read_rs1_04_BIT_64_05_AND_fwdin_ETC__q10,
	      CASE_IF_tx_type_w_data_whas__68_THEN_IF_tx_typ_ETC__q12,
	      CASE_ma_op2_i_BITS_2_TO_0_0_ma_op2_i_BITS_2_TO_ETC__q5,
	      CASE_rx_meta_from_stage2_first_x_BITS_28_TO_26_ETC__q1,
	      IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_da_ETC___d93,
	      IF_tx_type_w_data_whas__68_THEN_IF_tx_type_w_d_ETC___d784,
	      x__h5371;
  reg [1 : 0] CASE_ma_op1_i_BITS_1_TO_0_0_ma_op1_i_BITS_1_TO_ETC__q4,
	      CASE_rx_meta_w_datawget_BITS_11_TO_10_0_rx_me_ETC__q7,
	      CASE_rx_meta_w_datawget_BITS_11_TO_10_0b0_0b1_ETC__q6,
	      CASE_rx_meta_w_datawget_BITS_25_TO_22_3_1_4_1_0__q9;
  wire [130 : 0] fn_alu___d396;
  wire [77 : 0] IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d454;
  wire [69 : 0] IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d679;
  wire [63 : 0] _theResult_____1_snd_aluresult__h7197,
		_theResult_____7_snd_snd__h9028,
		_theResult____h4768,
		arg1__h4764,
		arg3__h4765,
		jump_address__h4767,
		memory_address__h4766,
		result__h7224,
		rs2__h4669,
		rx_meta_w_datawget_BITS_99_TO_36__q11,
		s4system_rs1_imm__h9068,
		s4trap_badaddr__h9024,
		value__h7321,
		x1_avValue_snd_aluresult__h7202;
  wire [6 : 0] rx_meta_w_datawget_BITS_35_TO_29__q3;
  wire [5 : 0] _theResult_____7_snd_fst__h9027,
	       memory_cause__h4771,
	       s4trap_cause__h9023;
  wire [4 : 0] req_atomic_op__h5328, rx_meta_w_datawget_BITS_19_TO_15__q8;
  wire [3 : 0] IF_IF_IF_rx_meta_w_data_whas__0_THEN_IF_rx_met_ETC___d257,
	       IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543,
	       IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290,
	       IF_rg_loadreserved_addr_51_BIT_64_52_AND_rg_lo_ETC___d256,
	       fn__h3762;
  wire [2 : 0] IF_IF_IF_rx_meta_w_data_whas__0_THEN_IF_rx_met_ETC___d263,
	       IF_IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_ETC___d245,
	       IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d539,
	       IF_rg_loadreserved_addr_51_BIT_64_52_AND_rg_lo_ETC___d262;
  wire [1 : 0] curr_epochs__h3082,
	       rx_meta_w_datawget_BITS_21_TO_20__q2,
	       td_state__h7587,
	       x__h4829,
	       x__read_btbresponse_prediction__h4351;
  wire IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_data__ETC___d536,
       NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330,
       NOT_fwding_read_rs1_04_BIT_64_05_84_OR_NOT_fwd_ETC___d293,
       _dfoo1,
       fwding_RDY_read_rs3__6_AND_wr_cache_avail_whas_ETC___d59,
       fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d239,
       fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d314,
       nanboxing__h4776,
       rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215,
       rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d431,
       rxinst_w_rdy_wget__1_AND_wr_misa_c_whas__2_AND_ETC___d53,
       wr_next_pc_whas__07_AND_wr_next_pc_wget__09_BI_ETC___d478;

  // action method rx_meta_from_stage2_notEmpty
  assign CAN_FIRE_rx_meta_from_stage2_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_meta_from_stage2_notEmpty = 1'd1 ;

  // action method rx_meta_from_stage2_first_deq_rdy
  assign CAN_FIRE_rx_meta_from_stage2_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_meta_from_stage2_first_deq_rdy = 1'd1 ;

  // action method rx_meta_from_stage2_first
  assign CAN_FIRE_rx_meta_from_stage2_first = 1'd1 ;
  assign WILL_FIRE_rx_meta_from_stage2_first = 1'd1 ;

  // value method rx_meta_from_stage2_deq_ena
  assign rx_meta_from_stage2_deq_ena = rx_meta_w_ena_whas ;

  // action method rx_mtval_from_stage2_notEmpty
  assign CAN_FIRE_rx_mtval_from_stage2_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_mtval_from_stage2_notEmpty = 1'd1 ;

  // action method rx_mtval_from_stage2_first_deq_rdy
  assign CAN_FIRE_rx_mtval_from_stage2_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_mtval_from_stage2_first_deq_rdy = 1'd1 ;

  // action method rx_mtval_from_stage2_first
  assign CAN_FIRE_rx_mtval_from_stage2_first = 1'd1 ;
  assign WILL_FIRE_rx_mtval_from_stage2_first = 1'd1 ;

  // value method rx_mtval_from_stage2_deq_ena
  assign rx_mtval_from_stage2_deq_ena = rx_meta_w_ena_whas ;

  // action method ma_op1
  assign CAN_FIRE_ma_op1 = 1'd1 ;
  assign WILL_FIRE_ma_op1 = EN_ma_op1 ;

  // action method ma_op2
  assign CAN_FIRE_ma_op2 = 1'd1 ;
  assign WILL_FIRE_ma_op2 = EN_ma_op2 ;

  // action method ma_op3
  assign CAN_FIRE_ma_op3 = 1'd1 ;
  assign WILL_FIRE_ma_op3 = EN_ma_op3 ;

  // action method tx_common_to_stage4_notFull
  assign CAN_FIRE_tx_common_to_stage4_notFull = 1'd1 ;
  assign WILL_FIRE_tx_common_to_stage4_notFull = 1'd1 ;

  // action method tx_common_to_stage4_enq_rdy
  assign CAN_FIRE_tx_common_to_stage4_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_common_to_stage4_enq_rdy = 1'd1 ;

  // value method tx_common_to_stage4_enq_ena
  assign tx_common_to_stage4_enq_ena = MUX_rg_stall_write_1__SEL_2 ;

  // value method tx_common_to_stage4_enq_data
  assign tx_common_to_stage4_enq_data =
	     { rx_meta_w_data_wget[99:36],
	       rx_meta_w_data_wget[19:15],
	       rx_meta_w_datawget_BITS_21_TO_20__q2[0],
	       rx_meta_w_data_wget[14] } ;

  // action method tx_type_to_stage4_notFull
  assign CAN_FIRE_tx_type_to_stage4_notFull = 1'd1 ;
  assign WILL_FIRE_tx_type_to_stage4_notFull = 1'd1 ;

  // action method tx_type_to_stage4_enq_rdy
  assign CAN_FIRE_tx_type_to_stage4_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_type_to_stage4_enq_rdy = 1'd1 ;

  // value method tx_type_to_stage4_enq_ena
  assign tx_type_to_stage4_enq_ena = tx_type_w_ena_whas ;

  // value method tx_type_to_stage4_enq_data
  assign tx_type_to_stage4_enq_data =
	     (tx_type_w_ena_whas && tx_type_w_data_wget[82:81] == 2'd0) ?
	       { 2'd0,
		 77'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ,
		 CASE_IF_tx_type_w_data_whas__68_THEN_IF_tx_typ_ETC__q12,
		 tx_type_w_data_wget[0] } :
	       { (tx_type_w_ena_whas && tx_type_w_data_wget[82:81] == 2'd1) ?
		   2'd1 :
		   ((tx_type_w_ena_whas &&
		     tx_type_w_data_wget[82:81] == 2'd2) ?
		      2'd2 :
		      2'd3),
		 tx_type_w_data_wget[80:0] } ;

  // action method tx_inst_notFull
  assign CAN_FIRE_tx_inst_notFull = 1'd1 ;
  assign WILL_FIRE_tx_inst_notFull = 1'd1 ;

  // action method tx_inst_enq_rdy
  assign CAN_FIRE_tx_inst_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_inst_enq_rdy = 1'd1 ;

  // value method tx_inst_enq_ena
  assign tx_inst_enq_ena = MUX_rg_stall_write_1__SEL_2 ;

  // value method tx_inst_enq_data_fst
  assign tx_inst_enq_data_fst = txinst_w_data_wget[95:32] ;

  // value method tx_inst_enq_data_snd
  assign tx_inst_enq_data_snd = txinst_w_data_wget[31:0] ;

  // action method rx_inst_notEmpty
  assign CAN_FIRE_rx_inst_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_inst_notEmpty = 1'd1 ;

  // action method rx_inst_first_deq_rdy
  assign CAN_FIRE_rx_inst_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_inst_first_deq_rdy = 1'd1 ;

  // action method rx_inst_first
  assign CAN_FIRE_rx_inst_first = 1'd1 ;
  assign WILL_FIRE_rx_inst_first = 1'd1 ;

  // value method rx_inst_deq_ena
  assign rx_inst_deq_ena = rx_meta_w_ena_whas ;

  // action method update_wEpoch
  assign CAN_FIRE_update_wEpoch = 1'd1 ;
  assign WILL_FIRE_update_wEpoch = EN_update_wEpoch ;

  // value method flush_from_exe_fst
  assign flush_from_exe_fst =
	     MUX_rg_stall_write_1__SEL_2 && fn_alu___d396[1] ;

  // value method flush_from_exe_snd
  assign flush_from_exe_snd =
	     MUX_rg_stall_write_1__SEL_2 ? fn_alu___d396[65:2] : 64'd0 ;

  // actionvalue method memory_request_get
  assign memory_request_get =
	     { memory_address__h4766,
	       rx_meta_w_datawget_BITS_21_TO_20__q2[0],
	       rx_meta_w_datawget_BITS_35_TO_29__q3[2:0],
	       IF_IF_IF_rx_meta_w_data_whas__0_THEN_IF_rx_met_ETC___d263 ==
	       3'd3 ||
	       IF_IF_IF_rx_meta_w_data_whas__0_THEN_IF_rx_met_ETC___d263 ==
	       3'd2,
	       x__h5371[1:0],
	       fwding_read_rs2[63:0],
	       req_atomic_op__h5328,
	       IF_IF_IF_rx_meta_w_data_whas__0_THEN_IF_rx_met_ETC___d263 ==
	       3'd5,
	       2'd0 } ;
  assign RDY_memory_request_get =
	     WILL_FIRE_RL_rl_capture_latest_ops &&
	     fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d239 &&
	     IF_IF_IF_rx_meta_w_data_whas__0_THEN_IF_rx_met_ETC___d257 ==
	     4'd1 ;
  assign CAN_FIRE_memory_request_get = RDY_memory_request_get ;
  assign WILL_FIRE_memory_request_get = EN_memory_request_get ;

  // action method cache_is_available
  assign CAN_FIRE_cache_is_available = 1'd1 ;
  assign WILL_FIRE_cache_is_available = 1'd1 ;

  // action method csr_misa_c
  assign CAN_FIRE_csr_misa_c = 1'd1 ;
  assign WILL_FIRE_csr_misa_c = 1'd1 ;

  // action method storebuffer_empty
  assign CAN_FIRE_storebuffer_empty = 1'd1 ;
  assign WILL_FIRE_storebuffer_empty = 1'd1 ;

  // action method fwd_from_pipe3
  assign CAN_FIRE_fwd_from_pipe3 = 1'd1 ;
  assign WILL_FIRE_fwd_from_pipe3 = 1'd1 ;

  // action method fwd_from_pipe4_first
  assign CAN_FIRE_fwd_from_pipe4_first = 1'd1 ;
  assign WILL_FIRE_fwd_from_pipe4_first = 1'd1 ;

  // action method next_pc
  assign RDY_next_pc = 1'd1 ;
  assign CAN_FIRE_next_pc = 1'd1 ;
  assign WILL_FIRE_next_pc = EN_next_pc ;

  // value method mv_train_bpu
  assign mv_train_bpu = wr_training_data[141:0] ;
  assign RDY_mv_train_bpu = wr_training_data[142] ;

  // value method mv_mispredict_fst
  assign mv_mispredict_fst = wr_mispredict_ghr[8] ;
  assign RDY_mv_mispredict_fst = wr_mispredict_ghr[9] ;

  // value method mv_mispredict_snd
  assign mv_mispredict_snd = wr_mispredict_ghr[7:0] ;
  assign RDY_mv_mispredict_snd = wr_mispredict_ghr[9] ;

  // value method mv_count_floats
  assign mv_count_floats = wr_count_floats_whas ;
  assign RDY_mv_count_floats = 1'd1 ;

  // value method mv_count_muldiv
  assign mv_count_muldiv = wr_count_muldiv_whas ;
  assign RDY_mv_count_muldiv = 1'd1 ;

  // value method mv_count_jumps
  assign mv_count_jumps = wr_count_jumps_whas ;
  assign RDY_mv_count_jumps = 1'd1 ;

  // value method mv_count_branches
  assign mv_count_branches = wr_count_branches_whas ;
  assign RDY_mv_count_branches = 1'd1 ;

  // value method mv_count_rawstalls
  assign mv_count_rawstalls = wr_count_rawstalls_whas ;
  assign RDY_mv_count_rawstalls = 1'd1 ;

  // value method mv_count_exestalls
  assign mv_count_exestalls = wr_count_exestalls_whas ;
  assign RDY_mv_count_exestalls = 1'd1 ;

  // submodule fwding
  mkfwding #(.hartid(hartid)) fwding(.CLK(CLK),
				     .RST_N(RST_N),
				     .fwd_from_pipe3_fwd(fwding_fwd_from_pipe3_fwd),
				     .fwd_from_pipe4_first_fwd(fwding_fwd_from_pipe4_first_fwd),
				     .read_rs1_addr(fwding_read_rs1_addr),
				     .read_rs1_rftype(fwding_read_rs1_rftype),
				     .read_rs1_val(fwding_read_rs1_val),
				     .read_rs2_addr(fwding_read_rs2_addr),
				     .read_rs2_rftype(fwding_read_rs2_rftype),
				     .read_rs2_val(fwding_read_rs2_val),
				     .read_rs3_addr(fwding_read_rs3_addr),
				     .read_rs3_rftype(fwding_read_rs3_rftype),
				     .read_rs3_val(fwding_read_rs3_val),
				     .EN_read_rs1(fwding_EN_read_rs1),
				     .EN_read_rs2(fwding_EN_read_rs2),
				     .EN_read_rs3(fwding_EN_read_rs3),
				     .read_rs1(fwding_read_rs1),
				     .RDY_read_rs1(fwding_RDY_read_rs1),
				     .read_rs2(fwding_read_rs2),
				     .RDY_read_rs2(fwding_RDY_read_rs2),
				     .read_rs3(fwding_read_rs3),
				     .RDY_read_rs3(fwding_RDY_read_rs3));

  // submodule multicycle_alu
  mkmulticycle_alu #(.hartid(hartid)) multicycle_alu(.CLK(CLK),
						     .RST_N(RST_N),
						     .ma_inputs_fn(multicycle_alu_ma_inputs_fn),
						     .ma_inputs_funct3(multicycle_alu_ma_inputs_funct3),
						     .ma_inputs_inst_type(multicycle_alu_ma_inputs_inst_type),
						     .ma_inputs_op1(multicycle_alu_ma_inputs_op1),
						     .ma_inputs_op2(multicycle_alu_ma_inputs_op2),
						     .ma_inputs_op3(multicycle_alu_ma_inputs_op3),
						     .ma_inputs_word32(multicycle_alu_ma_inputs_word32),
						     .EN_ma_inputs(multicycle_alu_EN_ma_inputs),
						     .RDY_ma_inputs(multicycle_alu_RDY_ma_inputs),
						     .mv_delayed_output(multicycle_alu_mv_delayed_output),
						     .RDY_mv_delayed_output(multicycle_alu_RDY_mv_delayed_output));

  // rule RL_rl_capture_memory_stalls
  assign CAN_FIRE_RL_rl_capture_memory_stalls =
	     rx_meta_from_stage2_notEmpty_b && !cache_is_available_avail &&
	     !rg_stall ;
  assign WILL_FIRE_RL_rl_capture_memory_stalls =
	     CAN_FIRE_RL_rl_capture_memory_stalls ;

  // rule RL_rl_capture_latest_ops
  assign CAN_FIRE_RL_rl_capture_latest_ops =
	     fwding_RDY_read_rs1 && fwding_RDY_read_rs2 &&
	     fwding_RDY_read_rs3__6_AND_wr_cache_avail_whas_ETC___d59 &&
	     cache_is_available_avail &&
	     !rg_stall ;
  assign WILL_FIRE_RL_rl_capture_latest_ops =
	     CAN_FIRE_RL_rl_capture_latest_ops ;

  // rule RL_delayed_output
  assign CAN_FIRE_RL_delayed_output =
	     multicycle_alu_RDY_mv_delayed_output &&
	     tx_type_to_stage4_enq_rdy_b &&
	     rg_stall ;
  assign WILL_FIRE_RL_delayed_output = CAN_FIRE_RL_delayed_output ;

  // rule RL_wr_training_data__dreg_update
  assign CAN_FIRE_RL_wr_training_data__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_wr_training_data__dreg_update = 1'd1 ;

  // rule RL_wr_mispredict_ghr__dreg_update
  assign CAN_FIRE_RL_wr_mispredict_ghr__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_wr_mispredict_ghr__dreg_update = 1'd1 ;

  // inputs to muxes for submodule ports
  assign MUX_rg_stall_write_1__SEL_1 =
	     WILL_FIRE_RL_delayed_output &&
	     multicycle_alu_mv_delayed_output[5] ;
  assign MUX_rg_stall_write_1__SEL_2 =
	     WILL_FIRE_RL_rl_capture_latest_ops &&
	     rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	     NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 ;
  assign MUX_rg_stall_write_1__VAL_2 =
	     IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 ==
	     4'd9 ||
	     IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 ==
	     4'd8 ;
  assign MUX_tx_type_w_data_wset_1__VAL_1 =
	     { 2'd2,
	       12'bxxxxxxxxxxxx /* unspecified value */ ,
	       multicycle_alu_mv_delayed_output[69:6],
	       multicycle_alu_mv_delayed_output[4:0] } ;
  always@(IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 or
	  value__h7321 or
	  CASE_IF_fwding_read_rs1_04_BIT_64_05_AND_fwdin_ETC__q10 or
	  nanboxing__h4776 or
	  s4system_rs1_imm__h9068 or
	  rx_meta_w_datawget_BITS_99_TO_36__q11 or
	  fwding_read_rs3 or
	  rx_meta_w_datawget_BITS_35_TO_29__q3 or
	  rx_meta_w_data_wget or
	  rx_mtval_from_stage2_first_x or
	  IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d679)
  begin
    case (IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543)
      4'd1:
	  MUX_tx_type_w_data_wset_1__VAL_2 =
	      { 2'd0,
		77'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ,
		CASE_IF_fwding_read_rs1_04_BIT_64_05_AND_fwdin_ETC__q10,
		nanboxing__h4776 };
      4'd5:
	  MUX_tx_type_w_data_wset_1__VAL_2 =
	      { 2'd3,
		s4system_rs1_imm__h9068,
		rx_meta_w_datawget_BITS_99_TO_36__q11[1:0],
		fwding_read_rs3[11:0],
		rx_meta_w_datawget_BITS_35_TO_29__q3[2:0] };
      4'd6:
	  MUX_tx_type_w_data_wset_1__VAL_2 =
	      { 2'd1,
		11'bxxxxxxxxxxx /* unspecified value */ ,
		(rx_meta_w_data_wget[25:22] == 4'd6) ?
		  { rx_meta_w_datawget_BITS_35_TO_29__q3[5:0],
		    rx_mtval_from_stage2_first_x } :
		  IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d679 };
      default: MUX_tx_type_w_data_wset_1__VAL_2 =
		   { 2'd2,
		     12'bxxxxxxxxxxxx /* unspecified value */ ,
		     value__h7321,
		     5'd0 };
    endcase
  end

  // inlined wires
  assign rx_meta_w_ena_whas =
	     WILL_FIRE_RL_rl_capture_latest_ops &&
	     (NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 ||
	      !rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215) ;
  assign rx_meta_w_data_wget =
	     { rx_meta_from_stage2_first_x[99:29],
	       CASE_rx_meta_from_stage2_first_x_BITS_28_TO_26_ETC__q1,
	       rx_meta_from_stage2_first_x[25:0] } ;
  assign wr_op1_wget =
	     { ma_op1_i[70:2],
	       CASE_ma_op1_i_BITS_1_TO_0_0_ma_op1_i_BITS_1_TO_ETC__q4 } ;
  assign wr_op2_wget =
	     { ma_op2_i[71:3],
	       CASE_ma_op2_i_BITS_2_TO_0_0_ma_op2_i_BITS_2_TO_ETC__q5 } ;
  assign wr_next_pc_wget = { 1'd1, next_pc_npc } ;
  assign wr_training_data_1_wget =
	     { 1'd1,
	       rx_meta_w_data_wget[99:36],
	       IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d454 } ;
  assign wr_training_data_1_whas =
	     WILL_FIRE_RL_rl_capture_latest_ops &&
	     rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d431 ;
  assign wr_mispredict_ghr_1_wget =
	     { 1'd1, rx_meta_w_data_wget[9], rx_meta_w_data_wget[7:0] } ;
  assign wr_mispredict_ghr_1_whas =
	     WILL_FIRE_RL_rl_capture_latest_ops &&
	     rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	     NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	     fn_alu___d396[1] &&
	     !fn_alu___d396[130] ;
  assign tx_type_w_ena_whas =
	     WILL_FIRE_RL_delayed_output &&
	     multicycle_alu_mv_delayed_output[5] ||
	     WILL_FIRE_RL_rl_capture_latest_ops &&
	     rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	     NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	     IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 !=
	     4'd9 &&
	     IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 !=
	     4'd8 ;
  assign tx_type_w_data_wget =
	     MUX_rg_stall_write_1__SEL_1 ?
	       MUX_tx_type_w_data_wset_1__VAL_1 :
	       MUX_tx_type_w_data_wset_1__VAL_2 ;
  assign txinst_w_data_wget =
	     { rx_meta_w_data_wget[99:36], rx_inst_first_x } ;
  assign wr_count_floats_whas =
	     WILL_FIRE_RL_rl_capture_latest_ops &&
	     rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	     NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	     IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 ==
	     4'd8 ;
  assign wr_count_muldiv_whas =
	     WILL_FIRE_RL_rl_capture_latest_ops &&
	     rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	     NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	     IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 ==
	     4'd9 ;
  assign wr_count_branches_whas =
	     WILL_FIRE_RL_rl_capture_latest_ops &&
	     rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	     NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	     IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 ==
	     4'd2 ;
  assign wr_count_jumps_whas =
	     WILL_FIRE_RL_rl_capture_latest_ops &&
	     rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	     NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	     (IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 ==
	      4'd4 ||
	      IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 ==
	      4'd3) ;
  assign wr_count_rawstalls_whas =
	     WILL_FIRE_RL_rl_capture_latest_ops &&
	     rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	     (!fwding_read_rs1[64] || !fwding_read_rs2[64] ||
	      !fwding_read_rs3[64]) ;
  assign wr_count_exestalls_whas =
	     WILL_FIRE_RL_delayed_output &&
	     !multicycle_alu_mv_delayed_output[5] ;

  // register rg_eEpoch
  assign rg_eEpoch_D_IN = fn_alu___d396[1] ^ rg_eEpoch ;
  assign rg_eEpoch_EN = MUX_rg_stall_write_1__SEL_2 ;

  // register rg_loadreserved_addr
  assign rg_loadreserved_addr_D_IN =
	     (fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d239 &&
	      IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_da_ETC___d93 ==
	      3'd4 &&
	      rx_meta_w_datawget_BITS_35_TO_29__q3[6:3] == 4'b0101) ?
	       { 1'd1, memory_address__h4766 } :
	       { 1'd0,
		 64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign rg_loadreserved_addr_EN =
	     WILL_FIRE_RL_rl_capture_latest_ops && _dfoo1 ;

  // register rg_stall
  assign rg_stall_D_IN =
	     !MUX_rg_stall_write_1__SEL_1 && MUX_rg_stall_write_1__VAL_2 ;
  assign rg_stall_EN =
	     WILL_FIRE_RL_delayed_output &&
	     multicycle_alu_mv_delayed_output[5] ||
	     WILL_FIRE_RL_rl_capture_latest_ops &&
	     rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	     NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 ;

  // register rg_wEpoch
  assign rg_wEpoch_D_IN = ~rg_wEpoch ;
  assign rg_wEpoch_EN = EN_update_wEpoch ;

  // register wr_mispredict_ghr
  assign wr_mispredict_ghr_D_IN =
	     { wr_mispredict_ghr_1_whas && wr_mispredict_ghr_1_wget[9],
	       wr_mispredict_ghr_1_wget[8:0] } ;
  assign wr_mispredict_ghr_EN = 1'd1 ;

  // register wr_training_data
  assign wr_training_data_D_IN =
	     { wr_training_data_1_whas && wr_training_data_1_wget[142],
	       wr_training_data_1_wget[141:0] } ;
  assign wr_training_data_EN = 1'd1 ;

  // submodule fwding
  assign fwding_fwd_from_pipe3_fwd = fwd_from_pipe3_fwd ;
  assign fwding_fwd_from_pipe4_first_fwd = fwd_from_pipe4_first_fwd ;
  assign fwding_read_rs1_addr = wr_op1_wget[70:66] ;
  assign fwding_read_rs1_rftype = wr_op1_wget[1:0] == 2'd2 ;
  assign fwding_read_rs1_val = wr_op1_wget[65:2] ;
  assign fwding_read_rs2_addr = wr_op2_wget[71:67] ;
  assign fwding_read_rs2_rftype = wr_op2_wget[2:0] == 3'd4 ;
  assign fwding_read_rs2_val = wr_op2_wget[66:3] ;
  assign fwding_read_rs3_addr = ma_op3_i[5:1] ;
  assign fwding_read_rs3_rftype = ma_op3_i[0] ;
  assign fwding_read_rs3_val = ma_op3_i[69:6] ;
  assign fwding_EN_read_rs1 = CAN_FIRE_RL_rl_capture_latest_ops ;
  assign fwding_EN_read_rs2 = CAN_FIRE_RL_rl_capture_latest_ops ;
  assign fwding_EN_read_rs3 = CAN_FIRE_RL_rl_capture_latest_ops ;

  // submodule multicycle_alu
  assign multicycle_alu_ma_inputs_fn = fn__h3762 ;
  assign multicycle_alu_ma_inputs_funct3 =
	     rx_meta_w_datawget_BITS_35_TO_29__q3[2:0] ;
  assign multicycle_alu_ma_inputs_inst_type =
	     IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 ;
  assign multicycle_alu_ma_inputs_op1 = arg1__h4764 ;
  assign multicycle_alu_ma_inputs_op2 = rs2__h4669 ;
  assign multicycle_alu_ma_inputs_op3 = fwding_read_rs3[63:0] ;
  assign multicycle_alu_ma_inputs_word32 = rx_meta_w_data_wget[13] ;
  assign multicycle_alu_EN_ma_inputs =
	     WILL_FIRE_RL_rl_capture_latest_ops &&
	     rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	     NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	     (IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 ==
	      4'd9 ||
	      IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 ==
	      4'd8) ;

  // remaining internal signals
  module_fn_alu instance_fn_alu_0(.fn_alu_fn(fn__h3762),
				  .fn_alu_op1(arg1__h4764),
				  .fn_alu_op2(rs2__h4669),
				  .fn_alu_op3(arg3__h4765),
				  .fn_alu_effective_address(_theResult____h4768),
				  .fn_alu_inst_type(rx_meta_w_data_wget[25:22]),
				  .fn_alu_funct3(x__h4829),
				  .fn_alu_word32(rx_meta_w_data_wget[13]),
				  .fn_alu_misa_c(csr_misa_c_m),
				  .fn_alu_nextpc(wr_next_pc_wget[63:0]),
				  .fn_alu_prediction(x__read_btbresponse_prediction__h4351[1]),
				  .fn_alu_comp(rx_meta_w_data_wget[12]),
				  .fn_alu(fn_alu___d396));
  assign IF_IF_IF_rx_meta_w_data_whas__0_THEN_IF_rx_met_ETC___d257 =
	     (IF_IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_ETC___d245 ==
	      3'd4 &&
	      rx_meta_w_datawget_BITS_35_TO_29__q3[6:3] == 4'b0111) ?
	       IF_rg_loadreserved_addr_51_BIT_64_52_AND_rg_lo_ETC___d256 :
	       rx_meta_w_data_wget[25:22] ;
  assign IF_IF_IF_rx_meta_w_data_whas__0_THEN_IF_rx_met_ETC___d263 =
	     (IF_IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_ETC___d245 ==
	      3'd4 &&
	      rx_meta_w_datawget_BITS_35_TO_29__q3[6:3] == 4'b0111) ?
	       IF_rg_loadreserved_addr_51_BIT_64_52_AND_rg_lo_ETC___d262 :
	       IF_IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_ETC___d245 ;
  assign IF_IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_ETC___d245 =
	     (IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_da_ETC___d93 ==
	      3'd4 &&
	      rx_meta_w_datawget_BITS_35_TO_29__q3[6:3] == 4'b0101) ?
	       3'd0 :
	       IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_da_ETC___d93 ;
  assign IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d454 =
	     { _theResult____h4768,
	       (IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 ==
		4'd2 &&
		!fn_alu___d396[130]) ?
		 td_state__h7587 :
		 2'd3,
	       ((rx_meta_w_data_wget[25:22] == 4'd3 ||
		 rx_meta_w_data_wget[25:22] == 4'd4) &&
		rx_meta_w_datawget_BITS_19_TO_15__q8[0]) ?
		 2'd2 :
		 ((rx_meta_w_data_wget[25:22] == 4'd4 &&
		   wr_op1_wget[70:66] == 5'b00001) ?
		    2'd3 :
		    CASE_rx_meta_w_datawget_BITS_25_TO_22_3_1_4_1_0__q9),
	       rx_meta_w_data_wget[9],
	       rx_meta_w_data_wget[12],
	       rx_meta_w_data_wget[7:0] } ;
  assign IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 =
	     (rx_meta_w_data_wget[25:22] == 4'd6 ||
	      IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_data__ETC___d536 ||
	      fn_alu___d396[130]) ?
	       4'd6 :
	       ((IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 ==
		 4'd1 &&
		 IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d539 ==
		 3'd5) ?
		  4'd0 :
		  IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290) ;
  assign IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d679 =
	     IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_data__ETC___d536 ?
	       { memory_cause__h4771, memory_address__h4766 } :
	       { 6'd0, _theResult____h4768 } ;
  assign IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 =
	     fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d239 ?
	       IF_IF_IF_rx_meta_w_data_whas__0_THEN_IF_rx_met_ETC___d257 :
	       rx_meta_w_data_wget[25:22] ;
  assign IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d539 =
	     fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d239 ?
	       IF_IF_IF_rx_meta_w_data_whas__0_THEN_IF_rx_met_ETC___d263 :
	       IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_da_ETC___d93 ;
  assign IF_rg_loadreserved_addr_51_BIT_64_52_AND_rg_lo_ETC___d256 =
	     (rg_loadreserved_addr[64] &&
	      rg_loadreserved_addr[63:0] == memory_address__h4766) ?
	       rx_meta_w_data_wget[25:22] :
	       4'd0 ;
  assign IF_rg_loadreserved_addr_51_BIT_64_52_AND_rg_lo_ETC___d262 =
	     (rg_loadreserved_addr[64] &&
	      rg_loadreserved_addr[63:0] == memory_address__h4766) ?
	       3'd1 :
	       IF_IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_ETC___d245 ;
  assign IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_data__ETC___d536 =
	     rx_meta_w_data_wget[25:22] == 4'd1 &&
	     (rx_meta_w_datawget_BITS_35_TO_29__q3[1:0] == 2'd1 &&
	      memory_address__h4766[0] ||
	      rx_meta_w_datawget_BITS_35_TO_29__q3[1:0] == 2'd2 &&
	      memory_address__h4766[1:0] != 2'd0 ||
	      rx_meta_w_datawget_BITS_35_TO_29__q3[1:0] == 2'd3 &&
	      memory_address__h4766[2:0] != 3'd0) ;
  assign NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 =
	     (IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 !=
	      4'd2 &&
	      IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 !=
	      4'd4 &&
	      IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 !=
	      4'd3 ||
	      EN_next_pc && wr_next_pc_wget[64]) &&
	     (IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 ==
	      4'd6 ||
	      fwding_read_rs1[64] && fwding_read_rs2[64] &&
	      fwding_read_rs3[64]) ;
  assign NOT_fwding_read_rs1_04_BIT_64_05_84_OR_NOT_fwd_ETC___d293 =
	     (!fwding_read_rs1[64] || !fwding_read_rs2[64] ||
	      !fwding_read_rs3[64]) &&
	     IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 !=
	     4'd6 ;
  assign _dfoo1 =
	     fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d239 &&
	     (IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_da_ETC___d93 ==
	      3'd4 &&
	      rx_meta_w_datawget_BITS_35_TO_29__q3[6:3] == 4'b0101 ||
	      IF_IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_ETC___d245 ==
	      3'd4 &&
	      rx_meta_w_datawget_BITS_35_TO_29__q3[6:3] == 4'b0111) ;
  assign _theResult_____1_snd_aluresult__h7197 =
	     (rg_loadreserved_addr[64] &&
	      rg_loadreserved_addr[63:0] == memory_address__h4766) ?
	       fn_alu___d396[129:66] :
	       64'd1 ;
  assign _theResult_____7_snd_fst__h9027 =
	     IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_data__ETC___d536 ?
	       memory_cause__h4771 :
	       6'd0 ;
  assign _theResult_____7_snd_snd__h9028 =
	     IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_data__ETC___d536 ?
	       memory_address__h4766 :
	       _theResult____h4768 ;
  assign _theResult____h4768 =
	     (rx_meta_w_data_wget[25:22] == 4'd4) ?
	       result__h7224 :
	       jump_address__h4767 ;
  assign arg1__h4764 =
	     (wr_op1_wget[1:0] != 2'd2 && wr_op1_wget[1:0] != 2'd0) ?
	       rx_meta_w_data_wget[99:36] :
	       fwding_read_rs1[63:0] ;
  assign arg3__h4765 =
	     (rx_meta_w_data_wget[25:22] == 4'd4) ?
	       fwding_read_rs1[63:0] :
	       rx_meta_w_data_wget[99:36] ;
  assign curr_epochs__h3082 = { rg_eEpoch, rg_wEpoch } ;
  assign fn__h3762 = rx_meta_w_datawget_BITS_35_TO_29__q3[6:3] ;
  assign fwding_RDY_read_rs3__6_AND_wr_cache_avail_whas_ETC___d59 =
	     fwding_RDY_read_rs3 && rx_meta_from_stage2_first_deq_rdy_b &&
	     EN_ma_op1 &&
	     EN_ma_op2 &&
	     EN_ma_op3 &&
	     rxinst_w_rdy_wget__1_AND_wr_misa_c_whas__2_AND_ETC___d53 ;
  assign fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d239 =
	     fwding_read_rs1[64] && fwding_read_rs2[64] &&
	     fwding_read_rs3[64] &&
	     rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	     rx_meta_w_data_wget[25:22] == 4'd1 &&
	     (rx_meta_w_datawget_BITS_35_TO_29__q3[1:0] != 2'd1 ||
	      !memory_address__h4766[0]) &&
	     (rx_meta_w_datawget_BITS_35_TO_29__q3[1:0] != 2'd2 ||
	      memory_address__h4766[1:0] == 2'd0) &&
	     (rx_meta_w_datawget_BITS_35_TO_29__q3[1:0] != 2'd3 ||
	      memory_address__h4766[2:0] == 3'd0) ;
  assign fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d314 =
	     (fwding_read_rs1[64] && fwding_read_rs2[64] &&
	      fwding_read_rs3[64] ||
	      IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 ==
	      4'd6) &&
	     (IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 ==
	      4'd2 ||
	      IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 ==
	      4'd4 ||
	      IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 ==
	      4'd3) &&
	     (!EN_next_pc || !wr_next_pc_wget[64]) ;
  assign jump_address__h4767 = arg3__h4765 + fwding_read_rs3[63:0] ;
  assign memory_address__h4766 =
	     fwding_read_rs1[63:0] + fwding_read_rs3[63:0] ;
  assign memory_cause__h4771 =
	     (IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_da_ETC___d93 ==
	      3'd0) ?
	       6'd4 :
	       6'd6 ;
  assign nanboxing__h4776 =
	     rx_meta_w_data_wget[25:22] == 4'd1 &&
	     rx_meta_w_datawget_BITS_35_TO_29__q3[1:0] == 2'd2 &&
	     rx_meta_w_data_wget[14] ;
  assign req_atomic_op__h5328 =
	     { rx_meta_w_datawget_BITS_35_TO_29__q3[0],
	       rx_meta_w_datawget_BITS_35_TO_29__q3[6:3] } ;
  assign result__h7224 = { jump_address__h4767[63:1], 1'd0 } ;
  assign rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 =
	     curr_epochs__h3082 == rx_meta_w_data_wget[21:20] ;
  assign rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d431 =
	     rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	     NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	     (IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 ==
	      4'd2 &&
	      !fn_alu___d396[130] ||
	      IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 ==
	      4'd3 ||
	      IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 ==
	      4'd4) ;
  assign rs2__h4669 = fwding_read_rs2[63:0] ;
  assign rx_meta_w_datawget_BITS_19_TO_15__q8 = rx_meta_w_data_wget[19:15] ;
  assign rx_meta_w_datawget_BITS_21_TO_20__q2 = rx_meta_w_data_wget[21:20] ;
  assign rx_meta_w_datawget_BITS_35_TO_29__q3 = rx_meta_w_data_wget[35:29] ;
  assign rx_meta_w_datawget_BITS_99_TO_36__q11 = rx_meta_w_data_wget[99:36] ;
  assign rxinst_w_rdy_wget__1_AND_wr_misa_c_whas__2_AND_ETC___d53 =
	     rx_inst_first_deq_rdy_b && tx_common_to_stage4_enq_rdy_b &&
	     tx_inst_enq_rdy_b &&
	     multicycle_alu_RDY_ma_inputs &&
	     tx_type_to_stage4_enq_rdy_b &&
	     rx_mtval_from_stage2_first_deq_rdy_b ;
  assign s4system_rs1_imm__h9068 =
	     rx_meta_w_datawget_BITS_35_TO_29__q3[2] ?
	       { 59'd0, fwding_read_rs3[16:12] } :
	       value__h7321 ;
  assign s4trap_badaddr__h9024 =
	     (rx_meta_w_data_wget[25:22] == 4'd6) ?
	       rx_mtval_from_stage2_first_x :
	       _theResult_____7_snd_snd__h9028 ;
  assign s4trap_cause__h9023 =
	     (rx_meta_w_data_wget[25:22] == 4'd6) ?
	       rx_meta_w_datawget_BITS_35_TO_29__q3[5:0] :
	       _theResult_____7_snd_fst__h9027 ;
  assign td_state__h7587 =
	     fn_alu___d396[0] ?
	       CASE_rx_meta_w_datawget_BITS_11_TO_10_0b0_0b1_ETC__q6 :
	       CASE_rx_meta_w_datawget_BITS_11_TO_10_0_rx_me_ETC__q7 ;
  assign value__h7321 =
	     fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d239 ?
	       x1_avValue_snd_aluresult__h7202 :
	       fn_alu___d396[129:66] ;
  assign wr_next_pc_whas__07_AND_wr_next_pc_wget__09_BI_ETC___d478 =
	     EN_next_pc && wr_next_pc_wget[64] && fwding_read_rs1[64] &&
	     fwding_read_rs2[64] &&
	     fwding_read_rs3[64] ;
  assign x1_avValue_snd_aluresult__h7202 =
	     (IF_IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_ETC___d245 ==
	      3'd4 &&
	      rx_meta_w_datawget_BITS_35_TO_29__q3[6:3] == 4'b0111) ?
	       _theResult_____1_snd_aluresult__h7197 :
	       fn_alu___d396[129:66] ;
  assign x__h4829 = rx_meta_w_datawget_BITS_35_TO_29__q3[1:0] ;
  assign x__read_btbresponse_prediction__h4351 = rx_meta_w_data_wget[11:10] ;
  always@(rx_meta_from_stage2_first_x)
  begin
    case (rx_meta_from_stage2_first_x[28:26])
      3'd0, 3'd1, 3'd2, 3'd3, 3'd4:
	  CASE_rx_meta_from_stage2_first_x_BITS_28_TO_26_ETC__q1 =
	      rx_meta_from_stage2_first_x[28:26];
      default: CASE_rx_meta_from_stage2_first_x_BITS_28_TO_26_ETC__q1 = 3'd5;
    endcase
  end
  always@(rx_meta_w_data_wget)
  begin
    case (rx_meta_w_data_wget[28:26])
      3'd0, 3'd1:
	  IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_da_ETC___d93 =
	      rx_meta_w_data_wget[28:26];
      3'd2: IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_da_ETC___d93 = 3'd4;
      3'd3: IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_da_ETC___d93 = 3'd2;
      3'd4: IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_da_ETC___d93 = 3'd3;
      default: IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_da_ETC___d93 =
		   3'd5;
    endcase
  end
  always@(IF_IF_IF_rx_meta_w_data_whas__0_THEN_IF_rx_met_ETC___d263)
  begin
    case (IF_IF_IF_rx_meta_w_data_whas__0_THEN_IF_rx_met_ETC___d263)
      3'd0, 3'd1:
	  x__h5371 =
	      IF_IF_IF_rx_meta_w_data_whas__0_THEN_IF_rx_met_ETC___d263;
      3'd2: x__h5371 = 3'd3;
      3'd3: x__h5371 = 3'd4;
      3'd4: x__h5371 = 3'd2;
      default: x__h5371 = 3'd5;
    endcase
  end
  always@(ma_op1_i)
  begin
    case (ma_op1_i[1:0])
      2'd0, 2'd2:
	  CASE_ma_op1_i_BITS_1_TO_0_0_ma_op1_i_BITS_1_TO_ETC__q4 =
	      ma_op1_i[1:0];
      default: CASE_ma_op1_i_BITS_1_TO_0_0_ma_op1_i_BITS_1_TO_ETC__q4 = 2'd1;
    endcase
  end
  always@(ma_op2_i)
  begin
    case (ma_op2_i[2:0])
      3'd0, 3'd1, 3'd2, 3'd4:
	  CASE_ma_op2_i_BITS_2_TO_0_0_ma_op2_i_BITS_2_TO_ETC__q5 =
	      ma_op2_i[2:0];
      default: CASE_ma_op2_i_BITS_2_TO_0_0_ma_op2_i_BITS_2_TO_ETC__q5 = 3'd3;
    endcase
  end
  always@(rx_meta_w_data_wget)
  begin
    case (rx_meta_w_data_wget[11:10])
      2'b0: CASE_rx_meta_w_datawget_BITS_11_TO_10_0b0_0b1_ETC__q6 = 2'b01;
      2'b01, 2'b10:
	  CASE_rx_meta_w_datawget_BITS_11_TO_10_0b0_0b1_ETC__q6 = 2'b11;
      2'd3:
	  CASE_rx_meta_w_datawget_BITS_11_TO_10_0b0_0b1_ETC__q6 =
	      rx_meta_w_data_wget[11:10];
    endcase
  end
  always@(rx_meta_w_data_wget)
  begin
    case (rx_meta_w_data_wget[11:10])
      2'd0:
	  CASE_rx_meta_w_datawget_BITS_11_TO_10_0_rx_me_ETC__q7 =
	      rx_meta_w_data_wget[11:10];
      2'b01, 2'b10:
	  CASE_rx_meta_w_datawget_BITS_11_TO_10_0_rx_me_ETC__q7 = 2'b0;
      2'b11: CASE_rx_meta_w_datawget_BITS_11_TO_10_0_rx_me_ETC__q7 = 2'b10;
    endcase
  end
  always@(rx_meta_w_data_wget)
  begin
    case (rx_meta_w_data_wget[25:22])
      4'd3, 4'd4: CASE_rx_meta_w_datawget_BITS_25_TO_22_3_1_4_1_0__q9 = 2'd1;
      default: CASE_rx_meta_w_datawget_BITS_25_TO_22_3_1_4_1_0__q9 = 2'd0;
    endcase
  end
  always@(IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d539)
  begin
    case (IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d539)
      3'd0, 3'd1:
	  CASE_IF_fwding_read_rs1_04_BIT_64_05_AND_fwdin_ETC__q10 =
	      IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d539;
      3'd2: CASE_IF_fwding_read_rs1_04_BIT_64_05_AND_fwdin_ETC__q10 = 3'd3;
      3'd3: CASE_IF_fwding_read_rs1_04_BIT_64_05_AND_fwdin_ETC__q10 = 3'd4;
      3'd4: CASE_IF_fwding_read_rs1_04_BIT_64_05_AND_fwdin_ETC__q10 = 3'd2;
      default: CASE_IF_fwding_read_rs1_04_BIT_64_05_AND_fwdin_ETC__q10 = 3'd5;
    endcase
  end
  always@(tx_type_w_data_wget)
  begin
    case (tx_type_w_data_wget[3:1])
      3'd0, 3'd1:
	  IF_tx_type_w_data_whas__68_THEN_IF_tx_type_w_d_ETC___d784 =
	      tx_type_w_data_wget[3:1];
      3'd2: IF_tx_type_w_data_whas__68_THEN_IF_tx_type_w_d_ETC___d784 = 3'd4;
      3'd3: IF_tx_type_w_data_whas__68_THEN_IF_tx_type_w_d_ETC___d784 = 3'd2;
      3'd4: IF_tx_type_w_data_whas__68_THEN_IF_tx_type_w_d_ETC___d784 = 3'd3;
      default: IF_tx_type_w_data_whas__68_THEN_IF_tx_type_w_d_ETC___d784 =
		   3'd5;
    endcase
  end
  always@(IF_tx_type_w_data_whas__68_THEN_IF_tx_type_w_d_ETC___d784)
  begin
    case (IF_tx_type_w_data_whas__68_THEN_IF_tx_type_w_d_ETC___d784)
      3'd0, 3'd1:
	  CASE_IF_tx_type_w_data_whas__68_THEN_IF_tx_typ_ETC__q12 =
	      IF_tx_type_w_data_whas__68_THEN_IF_tx_type_w_d_ETC___d784;
      3'd2: CASE_IF_tx_type_w_data_whas__68_THEN_IF_tx_typ_ETC__q12 = 3'd3;
      3'd3: CASE_IF_tx_type_w_data_whas__68_THEN_IF_tx_typ_ETC__q12 = 3'd4;
      3'd4: CASE_IF_tx_type_w_data_whas__68_THEN_IF_tx_typ_ETC__q12 = 3'd2;
      default: CASE_IF_tx_type_w_data_whas__68_THEN_IF_tx_typ_ETC__q12 = 3'd5;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        rg_eEpoch <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_loadreserved_addr <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	rg_stall <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_wEpoch <= `BSV_ASSIGNMENT_DELAY 1'd0;
	wr_mispredict_ghr <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 9'bxxxxxxxxx /* unspecified value */  };
	wr_training_data <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      142'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
      end
    else
      begin
        if (rg_eEpoch_EN) rg_eEpoch <= `BSV_ASSIGNMENT_DELAY rg_eEpoch_D_IN;
	if (rg_loadreserved_addr_EN)
	  rg_loadreserved_addr <= `BSV_ASSIGNMENT_DELAY
	      rg_loadreserved_addr_D_IN;
	if (rg_stall_EN) rg_stall <= `BSV_ASSIGNMENT_DELAY rg_stall_D_IN;
	if (rg_wEpoch_EN) rg_wEpoch <= `BSV_ASSIGNMENT_DELAY rg_wEpoch_D_IN;
	if (wr_mispredict_ghr_EN)
	  wr_mispredict_ghr <= `BSV_ASSIGNMENT_DELAY wr_mispredict_ghr_D_IN;
	if (wr_training_data_EN)
	  wr_training_data <= `BSV_ASSIGNMENT_DELAY wr_training_data_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    rg_eEpoch = 1'h0;
    rg_loadreserved_addr = 65'h0AAAAAAAAAAAAAAAA;
    rg_stall = 1'h0;
    rg_wEpoch = 1'h0;
    wr_mispredict_ghr = 10'h2AA;
    wr_training_data = 143'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_memory_stalls)
	begin
	  TASK_testplusargs___d28 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_memory_stalls)
	begin
	  TASK_testplusargs___d29 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_memory_stalls)
	begin
	  TASK_testplusargs___d30 = $test$plusargs("l4");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_memory_stalls)
	begin
	  v__h3718 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_memory_stalls &&
	  (TASK_testplusargs___d28 ||
	   TASK_testplusargs___d29 && TASK_testplusargs___d30))
	$write("[%10d", v__h3718, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_memory_stalls &&
	  (TASK_testplusargs___d28 ||
	   TASK_testplusargs___d29 && TASK_testplusargs___d30))
	$write("[%2d]STAGE3: DCACHE is busy", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_memory_stalls &&
	  (TASK_testplusargs___d28 ||
	   TASK_testplusargs___d29 && TASK_testplusargs___d30))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops)
	begin
	  TASK_testplusargs___d64 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops)
	begin
	  TASK_testplusargs___d65 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops)
	begin
	  TASK_testplusargs___d66 = $test$plusargs("l0");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops)
	begin
	  v__h3841 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d64 ||
	   TASK_testplusargs___d65 && TASK_testplusargs___d66))
	$write("[%10d", v__h3841, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d64 ||
	   TASK_testplusargs___d65 && TASK_testplusargs___d66))
	$write("[%2d]STAGE3: PC:%h", hartid, rx_meta_w_data_wget[99:36]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d64 ||
	   TASK_testplusargs___d65 && TASK_testplusargs___d66))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops)
	begin
	  TASK_testplusargs___d74 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops)
	begin
	  TASK_testplusargs___d75 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops)
	begin
	  TASK_testplusargs___d76 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d95 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_da_ETC___d93 == 3'd0;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d97 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_da_ETC___d93 == 3'd1;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d99 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_da_ETC___d93 == 3'd2;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d101 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_da_ETC___d93 == 3'd3;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d103 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_da_ETC___d93 == 3'd4;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d117 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	rx_meta_w_data_wget[25:22] == 4'd0;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d113 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_da_ETC___d93 != 3'd0 &&
	IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_da_ETC___d93 != 3'd1 &&
	IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_da_ETC___d93 != 3'd2 &&
	IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_da_ETC___d93 != 3'd3 &&
	IF_rx_meta_w_data_whas__0_THEN_IF_rx_meta_w_da_ETC___d93 != 3'd4;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d119 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	rx_meta_w_data_wget[25:22] == 4'd1;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d121 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	rx_meta_w_data_wget[25:22] == 4'd2;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d123 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	rx_meta_w_data_wget[25:22] == 4'd3;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d125 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	rx_meta_w_data_wget[25:22] == 4'd4;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d127 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	rx_meta_w_data_wget[25:22] == 4'd5;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d129 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	rx_meta_w_data_wget[25:22] == 4'd6;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d131 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	rx_meta_w_data_wget[25:22] == 4'd7;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d133 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	rx_meta_w_data_wget[25:22] == 4'd8;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d151 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	rx_meta_w_data_wget[25:22] != 4'd0 &&
	rx_meta_w_data_wget[25:22] != 4'd1 &&
	rx_meta_w_data_wget[25:22] != 4'd2 &&
	rx_meta_w_data_wget[25:22] != 4'd3 &&
	rx_meta_w_data_wget[25:22] != 4'd4 &&
	rx_meta_w_data_wget[25:22] != 4'd5 &&
	rx_meta_w_data_wget[25:22] != 4'd6 &&
	rx_meta_w_data_wget[25:22] != 4'd7 &&
	rx_meta_w_data_wget[25:22] != 4'd8;
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d161 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	!rx_meta_w_data_wget[14];
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d158 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	rx_meta_w_data_wget[14];
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d165 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	!rx_meta_w_data_wget[13];
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d167 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	rx_meta_w_data_wget[13];
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d171 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	!rx_meta_w_data_wget[12];
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d173 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	rx_meta_w_data_wget[12];
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d179 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	!rx_meta_w_data_wget[9];
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d181 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	rx_meta_w_data_wget[9];
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d187 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	rx_meta_w_data_wget[8];
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d185 =
	(TASK_testplusargs___d74 ||
	 TASK_testplusargs___d75 && TASK_testplusargs___d76) &&
	!rx_meta_w_data_wget[8];
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops)
	begin
	  v__h4051 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write("[%10d", v__h4051, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write("[%2d]STAGE3: ", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write("Stage3Meta { ", "pc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write("'h%h", rx_meta_w_data_wget[99:36]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write(", ", "funct: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write("'h%h", rx_meta_w_data_wget[35:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write(", ", "memaccess: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d95)
	$write("Load");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d97)
	$write("Store");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d99)
	$write("Fence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d101)
	$write("FenceI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d103)
	$write("Atomic");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d113)
	$write("SFence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write(", ", "inst_type: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d117)
	$write("ALU");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d119)
	$write("MEMORY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d121)
	$write("BRANCH");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d123)
	$write("JAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d125)
	$write("JALR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d127)
	$write("SYSTEM_INSTR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d129)
	$write("TRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d131)
	$write("WFI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d133)
	$write("FLOAT");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d151)
	$write("MULDIV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write(", ", "epochs: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write("'h%h", rx_meta_w_data_wget[21:20]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write(", ", "rd: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write("'h%h", rx_meta_w_data_wget[19:15]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write(", ", "rdtype: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d158)
	$write("FRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d161)
	$write("IRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write(", ", "word32: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d165)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d167)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write(", ", "compressed: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d171)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d173)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write(", ", "btbresponse: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write("BTBResponse { ", "prediction: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write("'h%h", rx_meta_w_data_wget[11:10]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write(", ", "btbhit: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d179)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d181)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write(", ", "hi: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d185)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d187)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write(", ", "history: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write("'h%h", rx_meta_w_data_wget[7:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  (TASK_testplusargs___d74 ||
	   TASK_testplusargs___d75 && TASK_testplusargs___d76))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  NOT_fwding_read_rs1_04_BIT_64_05_84_OR_NOT_fwd_ETC___d293)
	begin
	  TASK_testplusargs___d294 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  NOT_fwding_read_rs1_04_BIT_64_05_84_OR_NOT_fwd_ETC___d293)
	begin
	  TASK_testplusargs___d295 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  NOT_fwding_read_rs1_04_BIT_64_05_84_OR_NOT_fwd_ETC___d293)
	begin
	  TASK_testplusargs___d296 = $test$plusargs("l4");
	  #0;
	end
    NOT_fwding_read_rs1_04_BIT_64_05_84_OR_NOT_fwd_ETC___d299 =
	NOT_fwding_read_rs1_04_BIT_64_05_84_OR_NOT_fwd_ETC___d293 &&
	(TASK_testplusargs___d294 ||
	 TASK_testplusargs___d295 && TASK_testplusargs___d296);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  NOT_fwding_read_rs1_04_BIT_64_05_84_OR_NOT_fwd_ETC___d293)
	begin
	  v__h5637 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  NOT_fwding_read_rs1_04_BIT_64_05_84_OR_NOT_fwd_ETC___d299)
	$write("[%10d", v__h5637, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  NOT_fwding_read_rs1_04_BIT_64_05_84_OR_NOT_fwd_ETC___d299)
	$write("[%2d]STAGE3: RAW STALL PC:%h",
	       hartid,
	       rx_meta_w_data_wget[99:36]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  NOT_fwding_read_rs1_04_BIT_64_05_84_OR_NOT_fwd_ETC___d299)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d314)
	begin
	  TASK_testplusargs___d315 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d314)
	begin
	  TASK_testplusargs___d316 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d314)
	begin
	  TASK_testplusargs___d317 = $test$plusargs("l4");
	  #0;
	end
    fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d320 =
	fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d314 &&
	(TASK_testplusargs___d315 ||
	 TASK_testplusargs___d316 && TASK_testplusargs___d317);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d314)
	begin
	  v__h5903 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d320)
	$write("[%10d", v__h5903, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d320)
	$write("[%2d]STAGE3: NPC not Available PC:%h",
	       hartid,
	       rx_meta_w_data_wget[99:36]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d320)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  TASK_testplusargs___d334 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  TASK_testplusargs___d335 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  TASK_testplusargs___d336 = $test$plusargs("l0");
	  #0;
	end
    NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d339 =
	NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	(TASK_testplusargs___d334 ||
	 TASK_testplusargs___d335 && TASK_testplusargs___d336);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  v__h6246 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d339)
	$write("[%10d", v__h6246, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d339)
	$write("[%2d]STAGE3: Sending ops", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d339)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  TASK_testplusargs___d342 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  TASK_testplusargs___d343 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  TASK_testplusargs___d344 = $test$plusargs("l1");
	  #0;
	end
    NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d347 =
	NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	(TASK_testplusargs___d342 ||
	 TASK_testplusargs___d343 && TASK_testplusargs___d344);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  v__h6474 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d347)
	$write("[%10d", v__h6474, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d347)
	$write("[%2d]STAGE3: rs1avail:%b rs1:%h",
	       hartid,
	       fwding_read_rs1[64],
	       arg1__h4764);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d347)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  TASK_testplusargs___d355 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  TASK_testplusargs___d356 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  TASK_testplusargs___d357 = $test$plusargs("l1");
	  #0;
	end
    NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d360 =
	NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	(TASK_testplusargs___d355 ||
	 TASK_testplusargs___d356 && TASK_testplusargs___d357);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  v__h6643 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d360)
	$write("[%10d", v__h6643, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d360)
	$write("[%2d]STAGE3: rs2avail:%b rs2:%h",
	       hartid,
	       fwding_read_rs2[64],
	       fwding_read_rs2[63:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d360)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  TASK_testplusargs___d363 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  TASK_testplusargs___d364 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  TASK_testplusargs___d365 = $test$plusargs("l1");
	  #0;
	end
    NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d368 =
	NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	(TASK_testplusargs___d363 ||
	 TASK_testplusargs___d364 && TASK_testplusargs___d365);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  v__h6799 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d368)
	$write("[%10d", v__h6799, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d368)
	$write("[%2d]STAGE3: arg3:%h", hartid, arg3__h4765);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d368)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  TASK_testplusargs___d372 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  TASK_testplusargs___d373 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  TASK_testplusargs___d374 = $test$plusargs("l1");
	  #0;
	end
    NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d377 =
	NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	(TASK_testplusargs___d372 ||
	 TASK_testplusargs___d373 && TASK_testplusargs___d374);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  v__h6964 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d377)
	$write("[%10d", v__h6964, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d377)
	$write("[%2d]STAGE3: arg4:%h", hartid, fwding_read_rs3[63:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d377)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  TASK_testplusargs___d380 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  TASK_testplusargs___d381 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  TASK_testplusargs___d382 = $test$plusargs("l0");
	  #0;
	end
    NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d385 =
	NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	(TASK_testplusargs___d380 ||
	 TASK_testplusargs___d381 && TASK_testplusargs___d382);
    TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d398 =
	(TASK_testplusargs___d380 ||
	 TASK_testplusargs___d381 && TASK_testplusargs___d382) &&
	fn_alu___d396[130];
    TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d402 =
	(TASK_testplusargs___d380 ||
	 TASK_testplusargs___d381 && TASK_testplusargs___d382) &&
	!fn_alu___d396[130];
    TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d411 =
	(TASK_testplusargs___d380 ||
	 TASK_testplusargs___d381 && TASK_testplusargs___d382) &&
	fn_alu___d396[1];
    TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d415 =
	(TASK_testplusargs___d380 ||
	 TASK_testplusargs___d381 && TASK_testplusargs___d382) &&
	!fn_alu___d396[1];
    TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d419 =
	(TASK_testplusargs___d380 ||
	 TASK_testplusargs___d381 && TASK_testplusargs___d382) &&
	fn_alu___d396[0];
    TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d423 =
	(TASK_testplusargs___d380 ||
	 TASK_testplusargs___d381 && TASK_testplusargs___d382) &&
	!fn_alu___d396[0];
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330)
	begin
	  v__h7119 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d385)
	$write("[%10d", v__h7119, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d385)
	$write("[%2d]STAGE3: Result: ", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d385)
	$write("ALU_OUT { ", "trap: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d398)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d402)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d385)
	$write(", ", "aluresult: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d385)
	$write("'h%h", value__h7321);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d385)
	$write(", ", "redirect_pc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d385)
	$write("'h%h", fn_alu___d396[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d385)
	$write(", ", "redirect: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d411)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d415)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d385)
	$write(", ", "branch_taken: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d419)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_80_OR_TASK_testplusargs_81_A_ETC___d423)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d385)
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d385)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  fn_alu___d396[1] &&
	  !fn_alu___d396[130])
	begin
	  TASK_testplusargs___d459 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  fn_alu___d396[1] &&
	  !fn_alu___d396[130])
	begin
	  TASK_testplusargs___d460 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  fn_alu___d396[1] &&
	  !fn_alu___d396[130])
	begin
	  TASK_testplusargs___d461 = $test$plusargs("l4");
	  #0;
	end
    fn_alu_96_BIT_1_10_AND_NOT_fn_alu_96_BIT_130_9_ETC___d464 =
	fn_alu___d396[1] && !fn_alu___d396[130] &&
	(TASK_testplusargs___d459 ||
	 TASK_testplusargs___d460 && TASK_testplusargs___d461);
    TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d469 =
	(TASK_testplusargs___d459 ||
	 TASK_testplusargs___d460 && TASK_testplusargs___d461) &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 == 4'd0;
    fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d471 =
	fwding_read_rs1[64] && fwding_read_rs2[64] && fwding_read_rs3[64] &&
	fn_alu___d396[1] &&
	!fn_alu___d396[130] &&
	TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d469;
    TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d474 =
	(TASK_testplusargs___d459 ||
	 TASK_testplusargs___d460 && TASK_testplusargs___d461) &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 == 4'd1;
    fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d476 =
	fwding_read_rs1[64] && fwding_read_rs2[64] && fwding_read_rs3[64] &&
	fn_alu___d396[1] &&
	!fn_alu___d396[130] &&
	TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d474;
    TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d479 =
	(TASK_testplusargs___d459 ||
	 TASK_testplusargs___d460 && TASK_testplusargs___d461) &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 == 4'd2;
    TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d483 =
	(TASK_testplusargs___d459 ||
	 TASK_testplusargs___d460 && TASK_testplusargs___d461) &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 == 4'd3;
    TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d487 =
	(TASK_testplusargs___d459 ||
	 TASK_testplusargs___d460 && TASK_testplusargs___d461) &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 == 4'd4;
    TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d492 =
	(TASK_testplusargs___d459 ||
	 TASK_testplusargs___d460 && TASK_testplusargs___d461) &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 == 4'd5;
    fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d494 =
	fwding_read_rs1[64] && fwding_read_rs2[64] && fwding_read_rs3[64] &&
	fn_alu___d396[1] &&
	!fn_alu___d396[130] &&
	TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d492;
    TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d496 =
	(TASK_testplusargs___d459 ||
	 TASK_testplusargs___d460 && TASK_testplusargs___d461) &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 == 4'd6;
    TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d500 =
	(TASK_testplusargs___d459 ||
	 TASK_testplusargs___d460 && TASK_testplusargs___d461) &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 == 4'd7;
    fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d502 =
	fwding_read_rs1[64] && fwding_read_rs2[64] && fwding_read_rs3[64] &&
	fn_alu___d396[1] &&
	!fn_alu___d396[130] &&
	TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d500;
    TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d505 =
	(TASK_testplusargs___d459 ||
	 TASK_testplusargs___d460 && TASK_testplusargs___d461) &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 == 4'd8;
    fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d507 =
	fwding_read_rs1[64] && fwding_read_rs2[64] && fwding_read_rs3[64] &&
	fn_alu___d396[1] &&
	!fn_alu___d396[130] &&
	TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d505;
    TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d522 =
	(TASK_testplusargs___d459 ||
	 TASK_testplusargs___d460 && TASK_testplusargs___d461) &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 != 4'd0 &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 != 4'd1 &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 != 4'd2 &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 != 4'd3 &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 != 4'd4 &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 != 4'd5 &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 != 4'd6 &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 != 4'd7 &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d290 != 4'd8;
    fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d524 =
	fwding_read_rs1[64] && fwding_read_rs2[64] && fwding_read_rs3[64] &&
	fn_alu___d396[1] &&
	!fn_alu___d396[130] &&
	TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d522;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  fn_alu___d396[1] &&
	  !fn_alu___d396[130])
	begin
	  v__h7961 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  fn_alu_96_BIT_1_10_AND_NOT_fn_alu_96_BIT_130_9_ETC___d464)
	$write("[%10d", v__h7961, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  fn_alu_96_BIT_1_10_AND_NOT_fn_alu_96_BIT_130_9_ETC___d464)
	$write("[%2d]STAGE3: Misprediction. Inst: ", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d471)
	$write("ALU");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d476)
	$write("MEMORY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  wr_next_pc_whas__07_AND_wr_next_pc_wget__09_BI_ETC___d478 &&
	  fn_alu___d396[1] &&
	  !fn_alu___d396[130] &&
	  TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d479)
	$write("BRANCH");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  wr_next_pc_whas__07_AND_wr_next_pc_wget__09_BI_ETC___d478 &&
	  fn_alu___d396[1] &&
	  !fn_alu___d396[130] &&
	  TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d483)
	$write("JAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  wr_next_pc_whas__07_AND_wr_next_pc_wget__09_BI_ETC___d478 &&
	  fn_alu___d396[1] &&
	  !fn_alu___d396[130] &&
	  TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d487)
	$write("JALR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d494)
	$write("SYSTEM_INSTR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  fn_alu___d396[1] &&
	  !fn_alu___d396[130] &&
	  TASK_testplusargs_59_OR_TASK_testplusargs_60_A_ETC___d496)
	$write("TRAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d502)
	$write("WFI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d507)
	$write("FLOAT");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  fwding_read_rs1_04_BIT_64_05_AND_fwding_read_r_ETC___d524)
	$write("MULDIV");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  fn_alu_96_BIT_1_10_AND_NOT_fn_alu_96_BIT_130_9_ETC___d464)
	$write(" PC:%h Target:%h NextPC:%h",
	       rx_meta_w_data_wget[99:36],
	       fn_alu___d396[65:2],
	       wr_next_pc_wget[63:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  fn_alu_96_BIT_1_10_AND_NOT_fn_alu_96_BIT_130_9_ETC___d464)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  (IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 ==
	   4'd9 ||
	   IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 == 4'd8))
	begin
	  TASK_testplusargs___d561 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  (IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 ==
	   4'd9 ||
	   IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 == 4'd8))
	begin
	  TASK_testplusargs___d562 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  (IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 ==
	   4'd9 ||
	   IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 == 4'd8))
	begin
	  TASK_testplusargs___d563 = $test$plusargs("l1");
	  #0;
	end
    IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d566 =
	(IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 == 4'd9 ||
	 IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 == 4'd8) &&
	(TASK_testplusargs___d561 ||
	 TASK_testplusargs___d562 && TASK_testplusargs___d563);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  (IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 ==
	   4'd9 ||
	   IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 == 4'd8))
	begin
	  v__h8711 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d566)
	$write("[%10d", v__h8711, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d566)
	$write("[%2d]STAGE3: Sending multicyle ops", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d566)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 != 4'd9 &&
	  IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 != 4'd8)
	begin
	  TASK_testplusargs___d575 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 != 4'd9 &&
	  IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 != 4'd8)
	begin
	  TASK_testplusargs___d576 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 != 4'd9 &&
	  IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 != 4'd8)
	begin
	  TASK_testplusargs___d577 = $test$plusargs("l1");
	  #0;
	end
    NOT_IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta__ETC___d580 =
	IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 != 4'd9 &&
	IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 != 4'd8 &&
	(TASK_testplusargs___d575 ||
	 TASK_testplusargs___d576 && TASK_testplusargs___d577);
    TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d585 =
	(TASK_testplusargs___d575 ||
	 TASK_testplusargs___d576 && TASK_testplusargs___d577) &&
	IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 == 4'd1;
    TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d589 =
	(TASK_testplusargs___d575 ||
	 TASK_testplusargs___d576 && TASK_testplusargs___d577) &&
	IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 == 4'd6;
    TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d593 =
	(TASK_testplusargs___d575 ||
	 TASK_testplusargs___d576 && TASK_testplusargs___d577) &&
	IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 == 4'd5;
    TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d601 =
	(TASK_testplusargs___d575 ||
	 TASK_testplusargs___d576 && TASK_testplusargs___d577) &&
	IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 != 4'd1 &&
	IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 != 4'd6 &&
	IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 != 4'd5;
    TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d612 =
	(TASK_testplusargs___d575 ||
	 TASK_testplusargs___d576 && TASK_testplusargs___d577) &&
	IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 != 4'd1 &&
	IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 != 4'd6;
    TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d625 =
	(TASK_testplusargs___d575 ||
	 TASK_testplusargs___d576 && TASK_testplusargs___d577) &&
	IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 != 4'd1;
    TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d631 =
	(TASK_testplusargs___d575 ||
	 TASK_testplusargs___d576 && TASK_testplusargs___d577) &&
	IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 == 4'd1 &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d539 == 3'd0;
    TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d636 =
	(TASK_testplusargs___d575 ||
	 TASK_testplusargs___d576 && TASK_testplusargs___d577) &&
	IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 == 4'd1 &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d539 == 3'd1;
    TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d641 =
	(TASK_testplusargs___d575 ||
	 TASK_testplusargs___d576 && TASK_testplusargs___d577) &&
	IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 == 4'd1 &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d539 == 3'd2;
    TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d646 =
	(TASK_testplusargs___d575 ||
	 TASK_testplusargs___d576 && TASK_testplusargs___d577) &&
	IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 == 4'd1 &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d539 == 3'd3;
    TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d651 =
	(TASK_testplusargs___d575 ||
	 TASK_testplusargs___d576 && TASK_testplusargs___d577) &&
	IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 == 4'd1 &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d539 == 3'd4;
    TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d664 =
	(TASK_testplusargs___d575 ||
	 TASK_testplusargs___d576 && TASK_testplusargs___d577) &&
	IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 == 4'd1 &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d539 != 3'd0 &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d539 != 3'd1 &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d539 != 3'd2 &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d539 != 3'd3 &&
	IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_rea_ETC___d539 != 3'd4;
    rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d604 =
	rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 != 4'd9 &&
	IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 != 4'd8 &&
	TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d601;
    rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d615 =
	rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 != 4'd9 &&
	IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 != 4'd8 &&
	TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d612;
    rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d628 =
	rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 != 4'd9 &&
	IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 != 4'd8 &&
	TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d625;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 != 4'd9 &&
	  IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta_w_da_ETC___d543 != 4'd8)
	begin
	  v__h8880 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  NOT_IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta__ETC___d580)
	$write("[%10d", v__h8880, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  NOT_IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta__ETC___d580)
	$write("[%2d]STAGE3: Enquing: ", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d585)
	$write("tagged Memory ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d589)
	$write("tagged Trap ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d593)
	$write("tagged System ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d604)
	$write("tagged Regular ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d585)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d589)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d593)
	$write("Stage4System { ", "rs1_imm: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d604)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d585)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d589)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d593)
	$write("'h%h", s4system_rs1_imm__h9068);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d604)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d585)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d589)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d593)
	$write(", ", "lpc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d604)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d585)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d589)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d593)
	$write("'h%h", rx_meta_w_datawget_BITS_99_TO_36__q11[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d604)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d585)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d589)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d593)
	$write(", ", "csr_address: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d604)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d585)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d589)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d593)
	$write("'h%h", fwding_read_rs3[11:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d604)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d585)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d589)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d593)
	$write(", ", "funct3: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d604)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d585)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d589)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d593)
	$write("'h%h", rx_meta_w_datawget_BITS_35_TO_29__q3[2:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d604)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d585)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d589)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d593)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d604)
	$write("Stage4Regular { ", "rdvalue: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d585)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d589)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d593)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d604)
	$write("'h%h", value__h7321);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d585)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d589)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d593)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d604)
	$write(", ", "fflags: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d585)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d589)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d593)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d604)
	$write("'h%h", 5'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d585)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d589)
	$write("Stage4Trap { ", "cause: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d615)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d585)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d589)
	$write("'h%h", s4trap_cause__h9023);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d615)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d585)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d589)
	$write(", ", "badaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d615)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d585)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d589)
	$write("'h%h", s4trap_badaddr__h9024, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d615)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d585)
	$write("Stage4Memory { ", "memaccess: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d628)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d631)
	$write("Load");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d636)
	$write("Store");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d641)
	$write("Fence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d646)
	$write("FenceI");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d651)
	$write("Atomic");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d664)
	$write("SFence");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d628)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d585)
	$write(", ", "nanboxing: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d628)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  TASK_testplusargs_75_OR_TASK_testplusargs_76_A_ETC___d585)
	$write("'h%h", nanboxing__h4776, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d628)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	  NOT_IF_fwding_read_rs1_04_BIT_64_05_AND_fwding_ETC___d330 &&
	  NOT_IF_IF_rx_meta_w_data_whas__0_THEN_rx_meta__ETC___d580)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  !rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215)
	begin
	  TASK_testplusargs___d695 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  !rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215)
	begin
	  TASK_testplusargs___d696 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  !rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215)
	begin
	  TASK_testplusargs___d697 = $test$plusargs("l0");
	  #0;
	end
    NOT_rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14__ETC___d700 =
	!rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215 &&
	(TASK_testplusargs___d695 ||
	 TASK_testplusargs___d696 && TASK_testplusargs___d697);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  !rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14_EQ_I_ETC___d215)
	begin
	  v__h6098 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  NOT_rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14__ETC___d700)
	$write("[%10d", v__h6098, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  NOT_rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14__ETC___d700)
	$write("[%2d]STAGE3: Dropping Instructions", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_latest_ops &&
	  NOT_rg_eEpoch_read__12_CONCAT_rg_wEpoch_13_14__ETC___d700)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_delayed_output && multicycle_alu_mv_delayed_output[5])
	begin
	  TASK_testplusargs___d711 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_delayed_output && multicycle_alu_mv_delayed_output[5])
	begin
	  TASK_testplusargs___d712 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_delayed_output && multicycle_alu_mv_delayed_output[5])
	begin
	  TASK_testplusargs___d713 = $test$plusargs("l1");
	  #0;
	end
    multicycle_alu_mv_delayed_output__05_BIT_5_06__ETC___d716 =
	multicycle_alu_mv_delayed_output[5] &&
	(TASK_testplusargs___d711 ||
	 TASK_testplusargs___d712 && TASK_testplusargs___d713);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_delayed_output && multicycle_alu_mv_delayed_output[5])
	begin
	  v__h9818 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_delayed_output &&
	  multicycle_alu_mv_delayed_output__05_BIT_5_06__ETC___d716)
	$write("[%10d", v__h9818, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_delayed_output &&
	  multicycle_alu_mv_delayed_output__05_BIT_5_06__ETC___d716)
	$write("[%2d]STAGE3: Enquing Delayed Result ", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_delayed_output &&
	  multicycle_alu_mv_delayed_output__05_BIT_5_06__ETC___d716)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_delayed_output && !multicycle_alu_mv_delayed_output[5])
	begin
	  TASK_testplusargs___d719 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_delayed_output && !multicycle_alu_mv_delayed_output[5])
	begin
	  TASK_testplusargs___d720 = $test$plusargs("mstage3");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_delayed_output && !multicycle_alu_mv_delayed_output[5])
	begin
	  TASK_testplusargs___d721 = $test$plusargs("l4");
	  #0;
	end
    NOT_multicycle_alu_mv_delayed_output__05_BIT_5_ETC___d724 =
	!multicycle_alu_mv_delayed_output[5] &&
	(TASK_testplusargs___d719 ||
	 TASK_testplusargs___d720 && TASK_testplusargs___d721);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_delayed_output && !multicycle_alu_mv_delayed_output[5])
	begin
	  v__h9664 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_delayed_output &&
	  NOT_multicycle_alu_mv_delayed_output__05_BIT_5_ETC___d724)
	$write("[%10d", v__h9664, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_delayed_output &&
	  NOT_multicycle_alu_mv_delayed_output__05_BIT_5_ETC___d724)
	$write("MULDELAYED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_delayed_output &&
	  NOT_multicycle_alu_mv_delayed_output__05_BIT_5_ETC___d724)
	$write("\n");
  end
  // synopsys translate_on
endmodule  // mkstage3

